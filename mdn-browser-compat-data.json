{
    "version": "https://jsonfeed.org/version/1",
    "title": "mdn/browser-compat-data update data",
    "home_page_url": "https://azu.github.io/github-search-rss/mdn-browser-compat-data.json",
    "description": "mdn/browser-compat-data update data on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5179191?u=825a82f8ce49f10d5e309b8a96da0ef8e0fd67bc&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>This PR is a part of a project to add missing interfaces and interface features to BCD that are from an active spec (including WICG specs) and is supported in at least one browser.  This particular PR adds the missing DOMRect API feature, populating the results using data from the <a href=\"https://mdn-bcd-collector.appspot.com\" rel=\"nofollow\">mdn-bcd-collector</a> project (v3.1.10).</p>\n<p>Spec: <a rel=\"nofollow\" href=\"https://drafts.fxtf.org/geometry/#dom-domrect-fromrect\">https://drafts.fxtf.org/geometry/#dom-domrect-fromrect</a></p>\n<p>Tests Used: <a rel=\"nofollow\" href=\"https://mdn-bcd-collector.appspot.com/tests/api/DOMRect/fromRect\">https://mdn-bcd-collector.appspot.com/tests/api/DOMRect/fromRect</a></p>",
            "url": "https://github.com/mdn/browser-compat-data/pull/11562",
            "title": "Add missing api.DOMRect.fromRect feature",
            "date_modified": "2021-07-17T10:08:43.000Z",
            "author": {
                "name": "vinyldarkscratch",
                "url": "https://github.com/vinyldarkscratch"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5179191?u=825a82f8ce49f10d5e309b8a96da0ef8e0fd67bc&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>This PR is a part of a project to add missing interfaces and interface features to BCD that are from an active spec (including WICG specs) and is supported in at least one browser.  This particular PR adds the missing features of the DOMMatrix API, populating the results using data from the <a href=\"https://mdn-bcd-collector.appspot.com\" rel=\"nofollow\">mdn-bcd-collector</a> project (v3.1.10).</p>\n<p>Spec: <a rel=\"nofollow\" href=\"https://drafts.fxtf.org/geometry/#dommatrix\">https://drafts.fxtf.org/geometry/#dommatrix</a></p>\n<p>Tests Used: <a rel=\"nofollow\" href=\"https://mdn-bcd-collector.appspot.com/tests/api/DOMMatrix\">https://mdn-bcd-collector.appspot.com/tests/api/DOMMatrix</a></p>",
            "url": "https://github.com/mdn/browser-compat-data/pull/11561",
            "title": "Add missing features for DOMMatrix API",
            "date_modified": "2021-07-17T08:56:43.000Z",
            "author": {
                "name": "vinyldarkscratch",
                "url": "https://github.com/vinyldarkscratch"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5179191?u=825a82f8ce49f10d5e309b8a96da0ef8e0fd67bc&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>This PR is a part of a project to add missing interfaces and interface features to BCD that are from an active spec (including WICG specs) and is supported in at least one browser.  This particular PR adds the missing features of the CloseEvent API, populating the results using data from the <a href=\"https://mdn-bcd-collector.appspot.com\" rel=\"nofollow\">mdn-bcd-collector</a> project (v3.1.10).</p>\n<p>Spec: <a rel=\"nofollow\" href=\"https://html.spec.whatwg.org/multipage/web-sockets.html#the-closeevent-interface\">https://html.spec.whatwg.org/multipage/web-sockets.html#the-closeevent-interface</a></p>\n<p>Tests Used: <a rel=\"nofollow\" href=\"https://mdn-bcd-collector.appspot.com/tests/api/CloseEvent\">https://mdn-bcd-collector.appspot.com/tests/api/CloseEvent</a></p>\n<p>Note: Chrome/Safari data was derived from commit history instead -- see <a rel=\"nofollow\" href=\"https://source.chromium.org/chromium/chromium/src/+/63fc605d4f4d52aafa6f568b096c44ff9dd55021\">https://source.chromium.org/chromium/chromium/src/+/63fc605d4f4d52aafa6f568b096c44ff9dd55021</a> and <a rel=\"nofollow\" href=\"https://source.chromium.org/chromium/chromium/src/+/cb8badea0d665f6bb1107f88626e38edf820767d\">https://source.chromium.org/chromium/chromium/src/+/cb8badea0d665f6bb1107f88626e38edf820767d</a>.</p>",
            "url": "https://github.com/mdn/browser-compat-data/pull/11558",
            "title": "Add missing features for CloseEvent API",
            "date_modified": "2021-07-16T17:44:30.000Z",
            "author": {
                "name": "vinyldarkscratch",
                "url": "https://github.com/vinyldarkscratch"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/498917?u=a9115706328a9b324dae9b1f27cbb3bd507a9232&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>There are close() methods on both<br>\nDedicatedWorkerGlobalScope and SharedWorkerGlobalScope in BCD and MDN<br>\nalready:<br>\n<a rel=\"nofollow\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/DedicatedWorkerGlobalScope/close\">https://developer.mozilla.org/en-US/docs/Web/API/DedicatedWorkerGlobalScope/close</a><br>\n<a rel=\"nofollow\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SharedWorkerGlobalScope/close\">https://developer.mozilla.org/en-US/docs/Web/API/SharedWorkerGlobalScope/close</a></p>\n<p>There's a note here that explains how this came about:<br>\n<a rel=\"nofollow\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SharedWorkerGlobalScope/close#browser_compatibility\">https://developer.mozilla.org/en-US/docs/Web/API/SharedWorkerGlobalScope/close#browser_compatibility</a></p>\n<p>However, we need not keep this data or even have notes about it:<br>\n<a href=\"https://github.com/mdn/browser-compat-data/blob/main/docs/data-guidelines.md#apis-moved-on-the-prototype-chain\">https://github.com/mdn/browser-compat-data/blob/main/docs/data-guidelines.md#apis-moved-on-the-prototype-chain</a></p>\n<p>Furthermore, there is no close event or onclose property. It's not clear<br>\nwhen this was removed from browsers, but the onclose property is at<br>\nleast not supported anywhere today.</p>\n<p>This also updates some existing data:</p>\n<p>Verified supported in Opera 10.6:<br>\n<a rel=\"nofollow\" href=\"http://mdn-bcd-collector.appspot.com/tests/api/DedicatedWorkerGlobalScope/close\">http://mdn-bcd-collector.appspot.com/tests/api/DedicatedWorkerGlobalScope/close</a><br>\n<a rel=\"nofollow\" href=\"http://mdn-bcd-collector.appspot.com/tests/api/SharedWorkerGlobalScope/close\">http://mdn-bcd-collector.appspot.com/tests/api/SharedWorkerGlobalScope/close</a></p>\n<p>Firefox for Android data was also bumped to 29, it's implausible that it<br>\nwas supported much earlier on Android. It's probably the result of<br>\ncopying data from DedicatedWorkerGlobalScope, which is marked as<br>\nsupported since firefox for Android 4.</p>",
            "url": "https://github.com/mdn/browser-compat-data/pull/11557",
            "title": "Remove obsolete worker.close() and related entries",
            "date_modified": "2021-07-16T15:34:33.000Z",
            "author": {
                "name": "foolip",
                "url": "https://github.com/foolip"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/3654180?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/>\n<h4>Summary</h4>\n\n<p>The latest version of Safari supports the promise-based version of <code>decodeAudioData()</code>.</p>\n<h4>Test results and supporting details</h4>\n\n\n<p>I think it is supported since <a rel=\"nofollow\" href=\"https://developer.apple.com/documentation/safari-release-notes/safari-14_1-release-notes\">https://developer.apple.com/documentation/safari-release-notes/safari-14_1-release-notes</a></p>\n<blockquote>\n<p>Added support for Web Audio API, now unprefixed, compliant, and including Audio Worklets. This enables better compatibility for advanced audio processing, see Web Audio API for more information.</p>\n</blockquote>\n<p>Though I didn't verify if it started from this exact version.</p>",
            "url": "https://github.com/mdn/browser-compat-data/pull/11553",
            "title": "Update Safari compatibility for BaseAudioContext.decodeAudioData()",
            "date_modified": "2021-07-16T12:33:50.000Z",
            "author": {
                "name": "pioug",
                "url": "https://github.com/pioug"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/498917?u=a9115706328a9b324dae9b1f27cbb3bd507a9232&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>Confirmed by testing in Edge 18 and 79 on Sauce using these tests:<br>\n<a rel=\"nofollow\" href=\"https://mdn-bcd-collector.appspot.com/tests/javascript/builtins/String\">https://mdn-bcd-collector.appspot.com/tests/javascript/builtins/String</a></p>",
            "url": "https://github.com/mdn/browser-compat-data/pull/11552",
            "title": "Update Edge support from String.prototype.trimStart/trimEnd",
            "date_modified": "2021-07-16T12:12:21.000Z",
            "author": {
                "name": "foolip",
                "url": "https://github.com/foolip"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5368500?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>FF91 adds a new method <code>Object.hasOwn()</code> which is a safer/more convenient alternative to <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\" rel=\"nofollow\">Object.prototype.hasOwnProperty()</a>.</p>\n<ul>\n<li>Bug report is here: <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1711872\" rel=\"nofollow\">https://bugzilla.mozilla.org/show_bug.cgi?id=1711872</a></li>\n<li>MDN tracking for docs here:</li>\n<li>Spec: <a href=\"https://github.com/tc39/proposal-accessible-object-hasownproperty\">https://github.com/tc39/proposal-accessible-object-hasownproperty</a></li>\n</ul>\n<p>I tested for existence by running</p>\n<div class=\"snippet-clipboard-content position-relative\" data-snippet-clipboard-copy-content=\"let object = { foo: false }\nconsole.log(Object.hasOwn(object, &quot;foo&quot;))  // true\n\"><pre><code>let object = { foo: false }\nconsole.log(Object.hasOwn(object, \"foo\"))  // true\n</code></pre></div>\n<p>This works in FF91 but not chrome 91 and friends. Did not test in other browsers.</p>\n<ol>\n<li>Apparently this works in v8 - <a href=\"https://github.com/tc39/proposal-accessible-object-hasownproperty#implementations\">see here</a> - what's best way to find the matching release version?</li>\n<li>I put the method at the same level as hasOwnProperties, even though this new method is on Object and the other is on prototype (i.e. I assume we don't have to have as subfeature of prototype.)</li>\n<li>This fails locally on the spec_url. Can you advise on how to fix?</li>\n<li>Note the MDN URL does not exist. Doing this as first step.</li>\n</ol>",
            "url": "https://github.com/mdn/browser-compat-data/pull/11548",
            "title": "Object.hasOwn added",
            "date_modified": "2021-07-16T06:59:46.000Z",
            "author": {
                "name": "hamishwillee",
                "url": "https://github.com/hamishwillee"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5368500?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>This follows on from <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"943073253\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mdn/browser-compat-data/issues/11501\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mdn/browser-compat-data/issues/11501/hovercard\" href=\"https://github.com/mdn/browser-compat-data/issues/11501\">#11501</a></p>\n<p>This is just the first step - restructure the constructor to use subfeatures for parameters, and subfeatures of those for options.</p>\n<p>I am in no way sure this is \"correct\" so this is a first step.</p>\n<p>Following on from this I will need to add the new values for <strong>timeZoneName</strong> added in FF91 - see <a rel=\"nofollow\" href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1710429\">https://bugzilla.mozilla.org/show_bug.cgi?id=1710429</a>.</p>",
            "url": "https://github.com/mdn/browser-compat-data/pull/11544",
            "title": "DateTimeFormat - restructure constructor parameters",
            "date_modified": "2021-07-16T03:00:20.000Z",
            "author": {
                "name": "hamishwillee",
                "url": "https://github.com/hamishwillee"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/498917?u=a9115706328a9b324dae9b1f27cbb3bd507a9232&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>This is similar to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"943012620\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mdn/browser-compat-data/issues/11499\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mdn/browser-compat-data/pull/11499/hovercard\" href=\"https://github.com/mdn/browser-compat-data/pull/11499\">#11499</a>.</p>\n<p>The constructor isn't especially useful to begin with, keeping track of<br>\nwhen individual object parameters were supported isn't practically<br>\nuseful. What matters in practice is when the properties on the event<br>\nwere supported, which is already captured.</p>",
            "url": "https://github.com/mdn/browser-compat-data/pull/11530",
            "title": "Remove api.KeyboardEvent.KeyboardEvent.code_and_key_in_init entry",
            "date_modified": "2021-07-14T17:19:11.000Z",
            "author": {
                "name": "foolip",
                "url": "https://github.com/foolip"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/498917?u=a9115706328a9b324dae9b1f27cbb3bd507a9232&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>This is entirely produced using the migration script:<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"943340668\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mdn/browser-compat-data/issues/11506\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mdn/browser-compat-data/pull/11506/hovercard\" href=\"https://github.com/mdn/browser-compat-data/pull/11506\">#11506</a></p>",
            "url": "https://github.com/mdn/browser-compat-data/pull/11521",
            "title": "Set experimental to false for widely supported features",
            "date_modified": "2021-07-14T11:50:22.000Z",
            "author": {
                "name": "foolip",
                "url": "https://github.com/foolip"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/349114?u=ca8f61eb69eae8cb8f2d59c8f2120ff02535ebc2&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>This PR illustrates unifying Window and WorkerGlobalScope in a globals.json file and marking worker support in sub features.</p>\n<p>The alternate approach is a split, see <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"944278268\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mdn/browser-compat-data/issues/11517\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mdn/browser-compat-data/pull/11517/hovercard\" href=\"https://github.com/mdn/browser-compat-data/pull/11517\">#11517</a></p>\n<p>Context: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"808368991\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mdn/browser-compat-data/issues/9127\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mdn/browser-compat-data/issues/9127/hovercard\" href=\"https://github.com/mdn/browser-compat-data/issues/9127\">#9127</a></p>",
            "url": "https://github.com/mdn/browser-compat-data/pull/11518",
            "title": "Move WindowOrWorkerGlobalScope features to api.* (_globals folder)",
            "date_modified": "2021-07-14T10:29:13.000Z",
            "author": {
                "name": "Elchi3",
                "url": "https://github.com/Elchi3"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/349114?u=ca8f61eb69eae8cb8f2d59c8f2120ff02535ebc2&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>This PR illustrates a split of Window and WorkerGlobalScope using the mixins folder.</p>\n<p>The alternate approach is a globals folder and worker_support sub features, see <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"944281490\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mdn/browser-compat-data/issues/11518\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mdn/browser-compat-data/pull/11518/hovercard\" href=\"https://github.com/mdn/browser-compat-data/pull/11518\">#11518</a></p>\n<p>Context: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"808368991\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mdn/browser-compat-data/issues/9127\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mdn/browser-compat-data/issues/9127/hovercard\" href=\"https://github.com/mdn/browser-compat-data/issues/9127\">#9127</a></p>",
            "url": "https://github.com/mdn/browser-compat-data/pull/11517",
            "title": "Split Window and WorkerGlobalScope",
            "date_modified": "2021-07-14T10:25:11.000Z",
            "author": {
                "name": "Elchi3",
                "url": "https://github.com/Elchi3"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5179191?u=825a82f8ce49f10d5e309b8a96da0ef8e0fd67bc&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>This PR removes api.HTMLFrameSetElement.event_handlers from our data.  Since the API doesn't define its own event handlers as the MDN article states (and I question whether this API actually has an <code>onstorage</code> event handler), there's no reason to have this feature around.</p>",
            "url": "https://github.com/mdn/browser-compat-data/pull/11459",
            "title": "Remove redundant api.HTMLFrameSetElement.event_handlers feature",
            "date_modified": "2021-07-09T23:28:43.000Z",
            "author": {
                "name": "vinyldarkscratch",
                "url": "https://github.com/vinyldarkscratch"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5179191?u=825a82f8ce49f10d5e309b8a96da0ef8e0fd67bc&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>This PR adds real values for Firefox and Firefox Android for the <code>pointerlock_event</code> member of the <code>Document</code> API.  The data for these events was mirrored from their event handler counterparts.</p>",
            "url": "https://github.com/mdn/browser-compat-data/pull/11457",
            "title": "Add Firefox versions for api.Document.pointerlock_event",
            "date_modified": "2021-07-09T22:49:54.000Z",
            "author": {
                "name": "vinyldarkscratch",
                "url": "https://github.com/vinyldarkscratch"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/2410353?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h4>Summary</h4>\n<p>Adding cause option to Error constructor.</p>\n<h4>Test results and supporting details</h4>\n<p><a rel=\"nofollow\" href=\"https://v8.dev/features/error-cause\">https://v8.dev/features/error-cause</a></p>",
            "url": "https://github.com/mdn/browser-compat-data/pull/11446",
            "title": "Adding cause option to Error constructor",
            "date_modified": "2021-07-09T06:42:22.000Z",
            "author": {
                "name": "HolgerJeromin",
                "url": "https://github.com/HolgerJeromin"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5179191?u=825a82f8ce49f10d5e309b8a96da0ef8e0fd67bc&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>This PR is a part of a project to add missing interfaces and interface features to BCD that are from an active spec (including WICG specs) and is supported in at least one browser.  This particular PR adds the missing <code>Counter</code> API, populating the results using data from the <a href=\"https://mdn-bcd-collector.appspot.com\" rel=\"nofollow\">mdn-bcd-collector</a> project (v3.1.10).</p>\n<p>Spec: <a rel=\"nofollow\" href=\"https://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Counter\">https://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Counter</a></p>\n<p>Tests Used: <a rel=\"nofollow\" href=\"https://mdn-bcd-collector.appspot.com/tests/api/Counter\">https://mdn-bcd-collector.appspot.com/tests/api/Counter</a></p>",
            "url": "https://github.com/mdn/browser-compat-data/pull/11441",
            "title": "Add missing Counter API",
            "date_modified": "2021-07-08T20:53:06.000Z",
            "author": {
                "name": "vinyldarkscratch",
                "url": "https://github.com/vinyldarkscratch"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1466293?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>This is the second and last bcd PR for <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"932553381\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mdn/browser-compat-data/issues/11301\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mdn/browser-compat-data/issues/11301/hovercard\" href=\"https://github.com/mdn/browser-compat-data/issues/11301\">#11301</a> (it can be landed independantly).</p>\n<p>Initially there wasn't a <code>&lt;filter-function&gt;</code> CSS types, the 10 functions were defined directly on the CSS <code>filter</code>property.</p>\n<p>With the addition of <code>backdrop-filter</code>, supporting the same filters, this changed and the 10 CSS functions are now defined on a type. MDN has created these pages long ago, but always linked to the bcd of the CSS <code>filter</code> property (that don't individualize the functions).</p>\n<p>This fixes this by adding bcd for <code>&lt;filter-function&gt;</code>(implicitely added to the platform when <code>filter</code> has been added) and for each of the 10 functions, as subfeatures (added at the same time, but more were added in the future).</p>\n<p>The <code>mdn_url</code> (already existing) and <code>spec_url</code> have been added too to point to the right pages/fragments.</p>\n<p>This can land independantly of any other PR, nothing will break (even temporarily)</p>",
            "url": "https://github.com/mdn/browser-compat-data/pull/11368",
            "title": "Add CSS <filter-function> and its 10 CSS functions to bcd",
            "date_modified": "2021-07-03T10:32:16.000Z",
            "author": {
                "name": "teoli2003",
                "url": "https://github.com/teoli2003"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1466293?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>These properties had no bcd directly on them, but only on their subfeatures. I added it (taking the earliest one). That way mdn_url and spec_url are at the right level.</p>\n<p>This is similar to what we did in browser-compat-data/11214.</p>\n<p>(No mdn content will be broken by this change, it will be improved and we will be able to source spec_url through {{Specifications}}</p>",
            "url": "https://github.com/mdn/browser-compat-data/pull/11354",
            "title": "Fix multi display mode css",
            "date_modified": "2021-07-02T09:18:08.000Z",
            "author": {
                "name": "teoli2003",
                "url": "https://github.com/teoli2003"
            }
        }
    ]
}