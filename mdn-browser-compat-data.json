{
    "version": "https://jsonfeed.org/version/1",
    "title": "mdn/browser-compat-data update data",
    "home_page_url": "https://azu.github.io/github-search-rss/mdn-browser-compat-data.json",
    "description": "mdn/browser-compat-data update data on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5179191?u=825a82f8ce49f10d5e309b8a96da0ef8e0fd67bc&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>This PR adds real values for Safari (Desktop and iOS/iPadOS) for the <code>GlobalEventHandlers</code> API, based upon results from the <a href=\"https://mdn-bcd-collector.appspot.com\" rel=\"nofollow\">mdn-bcd-collector</a> project (v3.1.8).</p>\n<p>Tests Used:<br>\n<a rel=\"nofollow\" href=\"https://mdn-bcd-collector.appspot.com/tests/api/Document/onloadend\">https://mdn-bcd-collector.appspot.com/tests/api/Document/onloadend</a><br>\n<a rel=\"nofollow\" href=\"https://mdn-bcd-collector.appspot.com/tests/api/Document/onshow\">https://mdn-bcd-collector.appspot.com/tests/api/Document/onshow</a></p>",
            "url": "https://github.com/mdn/browser-compat-data/pull/11292",
            "title": "Add Safari versions for GlobalEventHandlers API",
            "date_modified": "2021-06-28T20:22:59.000Z",
            "author": {
                "name": "vinyldarkscratch",
                "url": "https://github.com/vinyldarkscratch"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/17036061?u=becea1794942100f6fe2be3a310afc188b7bde2e&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/>\n<h4>Summary</h4>\n\n<p>This change adds Safari 15 and Safari on iOS 15 support for WASM <code>instantiateStreaming</code>.</p>\n<h4>Test results and supporting details</h4>\n\n\n<p>See the changeset on WebKit Trac: <a rel=\"nofollow\" href=\"https://trac.webkit.org/changeset/272221/webkit\">https://trac.webkit.org/changeset/272221/webkit</a></p>\n<p>WASM streaming support was enabled in Safari 15 beta: <a rel=\"nofollow\" href=\"https://developer.apple.com/documentation/safari-release-notes/safari-15-beta-release-notes\">https://developer.apple.com/documentation/safari-release-notes/safari-15-beta-release-notes</a></p>",
            "url": "https://github.com/mdn/browser-compat-data/pull/11290",
            "title": "Add Safari 15 support for instantiateStreaming",
            "date_modified": "2021-06-28T16:41:46.000Z",
            "author": {
                "name": "jdatapple",
                "url": "https://github.com/jdatapple"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1466293?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>In the wiki era, <a rel=\"nofollow\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler</a> (and its chidren) have been renamed (i.e. moved) to <a rel=\"nofollow\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy</a>.</p>\n<p>Even if the redirect is in place, it is better to link drectly to the right page.</p>\n<p>This fixes this.</p>",
            "url": "https://github.com/mdn/browser-compat-data/pull/11289",
            "title": "Fix mdn_url Proxy/handler -> Proxy/Proxy",
            "date_modified": "2021-06-28T16:28:45.000Z",
            "author": {
                "name": "teoli2003",
                "url": "https://github.com/teoli2003"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/64103?u=06f0d3d9c67df1756585ec2a2929fe2b4f18648a&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h4>Summary</h4>\n<p>This PR proposes an addition to the schema, <code>accepts_flags</code> for both browsers as a whole and individual releases. This is me trying to having it both ways: providing an easy option (per-browser) for easy cases and a harder option (per-release) for harder cases.</p>\n<p>I defined this part of the schema as an optional hint, rather than to trying to use it to drive the linter immediately or do anything more restrictive. I'm proposing it in this shallow state now, so that we can roll it into the next breaking release (which we require for schema changes).</p>\n<h4>Related issues</h4>\n<p><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"899715577\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mdn/browser-compat-data/issues/10616\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mdn/browser-compat-data/issues/10616/hovercard\" href=\"https://github.com/mdn/browser-compat-data/issues/10616\">#10616</a></p>",
            "url": "https://github.com/mdn/browser-compat-data/pull/11286",
            "title": "Add `accepts_flags` to the browsers schema as an optional hint",
            "date_modified": "2021-06-28T14:54:24.000Z",
            "author": {
                "name": "ddbeck",
                "url": "https://github.com/ddbeck"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1466293?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>Most html attributes haven't yet the spec_url.</p>\n<p>This fix some of them (those that I need ;-) ) â€“ there is a lot of work left.</p>",
            "url": "https://github.com/mdn/browser-compat-data/pull/11240",
            "title": "Add spec_url to html attributes",
            "date_modified": "2021-06-25T11:26:45.000Z",
            "author": {
                "name": "teoli2003",
                "url": "https://github.com/teoli2003"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5368500?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #11190.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"926913844\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mdn/browser-compat-data/issues/11190\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mdn/browser-compat-data/issues/11190/hovercard\" href=\"https://github.com/mdn/browser-compat-data/issues/11190\">#11190</a></p>\n<p>Adds header entries for all the User Agent client hints and makes corresponding updates the <code>Accept-CH</code> header.</p>\n<ul>\n<li>Spec: <a href=\"https://wicg.github.io/ua-client-hints/\" rel=\"nofollow\">https://wicg.github.io/ua-client-hints/</a></li>\n<li>Added to Chrome in 89 as per <a href=\"https://www.chromestatus.com/feature/5995832180473856\" rel=\"nofollow\">https://www.chromestatus.com/feature/5995832180473856</a></li>\n<li>Demo/testing gitchme: <a href=\"https://user-agent-client-hints.glitch.me/\" rel=\"nofollow\">https://user-agent-client-hints.glitch.me/</a></li>\n</ul>\n<p>Appropriate versions added to all chromiums. There is no corresponding version for Samsung Internet yet.</p>\n<p>This does not include the header for <a href=\"https://wicg.github.io/ua-client-hints/#sec-ch-ua-bitness\" rel=\"nofollow\">Sec-CH-UA-Bitness</a> as that is not tested by the demo and does not appear to be implemented on quick code scan.</p>",
            "url": "https://github.com/mdn/browser-compat-data/pull/11235",
            "title": "Add HTTP Sec-CH-UA-* hints",
            "date_modified": "2021-06-25T03:31:07.000Z",
            "author": {
                "name": "hamishwillee",
                "url": "https://github.com/hamishwillee"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5179191?u=825a82f8ce49f10d5e309b8a96da0ef8e0fd67bc&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>This PR fixes up the names of the features within the <code>HTMLCanvasElement</code> API.  Many of the feature names did not conform to the <a href=\"https://github.com/mdn/browser-compat-data/blob/main/docs/data-guidelines.md#parameters-and-parameter-object-features\">documented guidelines</a>, so this is an attempt to get them to conform properly.</p>",
            "url": "https://github.com/mdn/browser-compat-data/pull/11234",
            "title": "Fix feature names for members of HTMLCanvasElement API",
            "date_modified": "2021-06-25T01:08:28.000Z",
            "author": {
                "name": "vinyldarkscratch",
                "url": "https://github.com/vinyldarkscratch"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/4225330?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>I'd noticed the way I had been using the mirror script had totally ignored the JavaScript folder, this has those fixes.</p>\n<h4>Summary</h4>\n<p>javascript/ updates for Samsugn Internet</p>\n<h4>Test results and supporting details</h4>\n<p>Generated using the mirror script</p>",
            "url": "https://github.com/mdn/browser-compat-data/pull/11181",
            "title": "Update the javascript/ folder for Samsung Internet",
            "date_modified": "2021-06-21T16:31:31.000Z",
            "author": {
                "name": "AdaRoseCannon",
                "url": "https://github.com/AdaRoseCannon"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5179191?u=825a82f8ce49f10d5e309b8a96da0ef8e0fd67bc&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>This PR removes Safari iOS 5.1 from the browser data, and changes everything set to Safari iOS 5.1 to mirrored data from Safari Desktop. Safari iOS 5.1's WebKit version is the exact same as iOS 5.0's, as confirmed by querying WhatIsMyBrowser.</p>\n<p>Using the Safari iOS 4 emulator in BrowserStack, I've spot-checked a few entries to ensure this methodology is correct. I have also found that all of the data for Safari iOS 351 came from the initial wiki tables, and most entries are accompanied by Safari Desktop set to 5.1, which further leads me to believe that Safari iOS 5.1 was mistakenly added.</p>\n<p>An additional note is that worker support was indeed pushed back to a later release in Safari iOS than Safari Desktop, probably due to OS implementation or the likes.  I've set its version to 5.0.</p>",
            "url": "https://github.com/mdn/browser-compat-data/pull/11175",
            "title": "Remove Safari iOS 5.1",
            "date_modified": "2021-06-21T03:19:47.000Z",
            "author": {
                "name": "vinyldarkscratch",
                "url": "https://github.com/vinyldarkscratch"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5179191?u=825a82f8ce49f10d5e309b8a96da0ef8e0fd67bc&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>This PR removes Safari iOS 3.1 from the browser data, and changes everything set to Safari iOS 3.1 to mirrored data from Safari Desktop.  Safari iOS 3.1's WebKit version is the exact same as iOS 3.0's, as confirmed by querying WhatIsMyBrowser.</p>\n<p>Using the Safari 3 emulator in BrowserStack, I've spot-checked a few entries to ensure this methodology is correct.  I have also found that all of the data for Safari iOS 3.1 came from the initial wiki tables, and most entries are accompanied by Safari Desktop set to 3.1, which further leads me to believe that Safari iOS 3.1 was mistakenly added.</p>\n<p><del>Blocked by <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"926779378\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mdn/browser-compat-data/issues/11188\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mdn/browser-compat-data/pull/11188/hovercard\" href=\"https://github.com/mdn/browser-compat-data/pull/11188\">#11188</a>.</del></p>",
            "url": "https://github.com/mdn/browser-compat-data/pull/11173",
            "title": "Remove Safari iOS 3.1",
            "date_modified": "2021-06-21T00:45:16.000Z",
            "author": {
                "name": "vinyldarkscratch",
                "url": "https://github.com/vinyldarkscratch"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5179191?u=825a82f8ce49f10d5e309b8a96da0ef8e0fd67bc&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>This PR adds real values for Chrome and Safari for the <code>requestPointerLock</code> member of the <code>Element</code> API.  By running <code>document.forms[0].webkitRequestPointerLock;</code> in various versions of Chrome and Safari, I have determined that Safari has never supported pointer locks before Safari 10.1, with or without a prefix.  Additionally, Chrome has removed the prefixed version of <code>requestPointerLock</code> in the following version after adding the non-prefixed version, so it is not present in Edge.</p>",
            "url": "https://github.com/mdn/browser-compat-data/pull/11164",
            "title": "Add Chrome/Safari versions for api.Element.requestPointerLock",
            "date_modified": "2021-06-20T01:25:26.000Z",
            "author": {
                "name": "vinyldarkscratch",
                "url": "https://github.com/vinyldarkscratch"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5179191?u=825a82f8ce49f10d5e309b8a96da0ef8e0fd67bc&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>This PR adds real values for Safari (Desktop and iOS/iPadOS) for the fullscreen-related members of the <code>Element</code> and <code>Document</code> APIs, based upon manual testing.</p>\n<p>Test Code Used: <code>'webkitRequestFullScreen' in document.forms[0];</code></p>",
            "url": "https://github.com/mdn/browser-compat-data/pull/11162",
            "title": "Add Safari versions for fullscreen properties",
            "date_modified": "2021-06-20T00:53:46.000Z",
            "author": {
                "name": "vinyldarkscratch",
                "url": "https://github.com/vinyldarkscratch"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/498917?u=a9115706328a9b324dae9b1f27cbb3bd507a9232&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>Dupe of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"925401379\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mdn/browser-compat-data/issues/11156\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mdn/browser-compat-data/pull/11156/hovercard\" href=\"https://github.com/mdn/browser-compat-data/pull/11156\">#11156</a>, kind of.</p>",
            "url": "https://github.com/mdn/browser-compat-data/pull/11157",
            "title": "Remove Safari 6.1",
            "date_modified": "2021-06-19T14:47:48.000Z",
            "author": {
                "name": "foolip",
                "url": "https://github.com/foolip"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5179191?u=825a82f8ce49f10d5e309b8a96da0ef8e0fd67bc&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>This PR removes Safari 6.1 from the data and converts all of its entries to Safari 7.  Details are described in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"828954742\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mdn/browser-compat-data/issues/9423\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mdn/browser-compat-data/issues/9423/hovercard\" href=\"https://github.com/mdn/browser-compat-data/issues/9423\">#9423</a>, but to summarize, it seems that Safari 6.1 and 6.2 are simply backports of Safari 7.0 and 7.1 for older macOS versions, similar to <a href=\"https://github.com/mdn/browser-compat-data/issues/4679\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mdn/browser-compat-data/issues/4679/hovercard\">Safari 4.1 and 5.0</a>.</p>",
            "url": "https://github.com/mdn/browser-compat-data/pull/11156",
            "title": "Remove Safari 6.1",
            "date_modified": "2021-06-19T14:06:26.000Z",
            "author": {
                "name": "vinyldarkscratch",
                "url": "https://github.com/vinyldarkscratch"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/498917?u=a9115706328a9b324dae9b1f27cbb3bd507a9232&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>These entries represent not the parameter itself, but whether it's<br>\noptional and defaulting to false. Since that is the current spec'd<br>\nbehavior, these entries aren't irrelevant in the \"removed for two years\"<br>\nsense, but if they were inverted to mean \"defaults to true\" they would<br>\nbe.</p>\n<p>This issue is already documented on both MDN pages:<br>\n<a rel=\"nofollow\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\">https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode</a><br>\n<a rel=\"nofollow\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/importNode\">https://developer.mozilla.org/en-US/docs/Web/API/Document/importNode</a></p>",
            "url": "https://github.com/mdn/browser-compat-data/pull/11152",
            "title": "Remove entries for cloneNode() and importNode() deep parameters",
            "date_modified": "2021-06-18T15:36:01.000Z",
            "author": {
                "name": "foolip",
                "url": "https://github.com/foolip"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1466293?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><ul>\n<li>Marked RTCPeerConnectionIceErrorEvent.hostCandidate as deprecated, no more on standard track.</li>\n<li>Added RTCPeerConnectionIceErrorEvent.{address, port} as supported by Chrome 81.<br>\nSource: <a href=\"https://raw.githubusercontent.com/foolip/mdn-bcd-results/main/3.1.4-chrome-81.0.4044.129-windows-10-5267fa8422.json\" rel=\"nofollow\">https://raw.githubusercontent.com/foolip/mdn-bcd-results/main/3.1.4-chrome-81.0.4044.129-windows-10-5267fa8422.json</a><br>\nSee also chromium sourcecode: <a href=\"https://chromium.googlesource.com/chromium/src/+/72c1e715fa208acb02a5ec2468f477c4cbd9debf%5E%21/#F11\" rel=\"nofollow\">https://chromium.googlesource.com/chromium/src/+/72c1e715fa208acb02a5ec2468f477c4cbd9debf%5E%21/#F11</a><br>\n-Used npm run mirror to complete info. I left safari and edge as null as they are \"base\" browsers, but it likely is supported there too.</li>\n</ul>",
            "url": "https://github.com/mdn/browser-compat-data/pull/11151",
            "title": "Fix RTCPeerConnectionIceErrorEvent",
            "date_modified": "2021-06-18T14:09:09.000Z",
            "author": {
                "name": "teoli2003",
                "url": "https://github.com/teoli2003"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1466293?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>Added two missing events: <code>onicegatheringstatechange_event</code> and <code>icecandidateerror_event</code>(I took their compat info form <code>onicegatheringstatechange</code> and <code>onicecadidateerror</code> that were both existing.<br>\nAdded mdn and spec urls for <code>RTCPeerConnection.getTranceivers</code>.</p>",
            "url": "https://github.com/mdn/browser-compat-data/pull/11150",
            "title": "Fix RTCPeerConnection",
            "date_modified": "2021-06-18T13:15:12.000Z",
            "author": {
                "name": "teoli2003",
                "url": "https://github.com/teoli2003"
            }
        }
    ]
}