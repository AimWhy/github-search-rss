{
    "version": "https://jsonfeed.org/version/1",
    "title": "mdn/content update content",
    "home_page_url": "https://azu.github.io/github-search-rss/mdn-content.json",
    "description": "mdn/content update content on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5368500?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #6201.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"926469407\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mdn/content/issues/6201\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mdn/content/issues/6201/hovercard\" href=\"https://github.com/mdn/content/issues/6201\">#6201</a></p>\n<p>Despite the official note Safari 14 is not compatible with webp on macOS desktop. This is noted at the end of <a rel=\"nofollow\" href=\"https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types#webp\">https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types#webp</a></p>\n<p>This moves that same note into the learn topic <a rel=\"nofollow\" href=\"https://developer.mozilla.org/en-US/docs/Learn/Performance/Multimedia#the_most_optimal_format\">https://developer.mozilla.org/en-US/docs/Learn/Performance/Multimedia#the_most_optimal_format</a></p>\n<p>So basically now it says supported on all major browsers except this one browser in the current version.</p>",
            "url": "https://github.com/mdn/content/pull/6207",
            "title": "Add note about Safari 14 on macOS desktop not being compatible",
            "date_modified": "2021-06-21T23:50:41.000Z",
            "author": {
                "name": "hamishwillee",
                "url": "https://github.com/hamishwillee"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/26739?u=a88c9c6e908b2fa16d426405fd7aaf027c8382c2&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/>\n<blockquote>\n<p>What was wrong/why is this fix needed? (quick summary only)</p>\n</blockquote>\n<p>Lots of live samples used a remote URL instead of a local URL for the images</p>\n<blockquote>\n<p>Issue number (if there is an associated issue)</p>\n</blockquote>\n<p>n/a</p>\n<blockquote>\n<p>Anything else that could help us review it</p>\n</blockquote>\n<p>See existing work: <a href=\"https://github.com/mdn/content/pulls?q=is%3Apr+is%3Aclosed+mdn.mozillademos.org\">https://github.com/mdn/content/pulls?q=is%3Apr+is%3Aclosed+mdn.mozillademos.org</a><br>\nBut these pages, incorrectly, didn't use <code>mdn.mozillademos.org</code> but the prod domain.</p>",
            "url": "https://github.com/mdn/content/pull/6205",
            "title": "move to local image files for live samples",
            "date_modified": "2021-06-21T20:17:45.000Z",
            "author": {
                "name": "peterbe",
                "url": "https://github.com/peterbe"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/26739?u=a88c9c6e908b2fa16d426405fd7aaf027c8382c2&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/>\n<blockquote>\n<p>What was wrong/why is this fix needed? (quick summary only)</p>\n</blockquote>\n<p>Lots of samples use the deprecated <a rel=\"nofollow\" href=\"https://mdn.mozillademos.org/files/\">https://mdn.mozillademos.org/files/</a>... URLs.</p>\n<blockquote>\n<p>Issue number (if there is an associated issue)</p>\n</blockquote>\n<p>n/a</p>\n<blockquote>\n<p>Anything else that could help us review it</p>\n</blockquote>\n<p>See existing ongoing work: <a href=\"https://github.com/mdn/content/pulls?q=is%3Apr+is%3Aclosed+mdn.mozillademos.org\">https://github.com/mdn/content/pulls?q=is%3Apr+is%3Aclosed+mdn.mozillademos.org</a></p>",
            "url": "https://github.com/mdn/content/pull/6204",
            "title": "remove use of mdn.mozillademos.org",
            "date_modified": "2021-06-21T20:04:35.000Z",
            "author": {
                "name": "peterbe",
                "url": "https://github.com/peterbe"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1466293?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>This is part of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"924868618\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mdn/content/issues/6108\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mdn/content/issues/6108/hovercard\" href=\"https://github.com/mdn/content/issues/6108\">#6108</a>.</p>\n<p>We are dealing with features that are no more on the standard track (deprecated), with bcd tables. The idea is to remove the <code>{{Specifications}}</code>, that implies missing data in this case, without putting back an outdated table like before</p>\n<p>Dealing with <code>PerformanceTiming.*</code> here.</p>\n<p>I removed the {{Specifications}} macros and replaced it with a text. Same text in all pages (22 pages).</p>",
            "url": "https://github.com/mdn/content/pull/6202",
            "title": "Update no-spec msg for PerformanceTiming.*",
            "date_modified": "2021-06-21T18:29:34.000Z",
            "author": {
                "name": "teoli2003",
                "url": "https://github.com/teoli2003"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1466293?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>This is part of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"924868618\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mdn/content/issues/6108\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mdn/content/issues/6108/hovercard\" href=\"https://github.com/mdn/content/issues/6108\">#6108</a>.</p>\n<p>We are dealing with features that are no more on the standard track (deprecated), with bcd tables. The idea is to remove the <code>{{Specifications}}</code>, that implies missing data in this case, without putting back an outdated table like before</p>\n<p>Dealing with `PaymentCurrencyAmount.currencySystem here.</p>\n<p>I removed the {{Specifications}} macros and replaced it the text that was above (with a little addition). I also moved the note at the top to make it more visible.</p>",
            "url": "https://github.com/mdn/content/pull/6200",
            "title": "Update no-spec msg for PaymentCurrencyAmount.currencySystem",
            "date_modified": "2021-06-21T17:53:24.000Z",
            "author": {
                "name": "teoli2003",
                "url": "https://github.com/teoli2003"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1466293?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>This is part of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"924868618\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mdn/content/issues/6108\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mdn/content/issues/6108/hovercard\" href=\"https://github.com/mdn/content/issues/6108\">#6108</a>.</p>\n<p>We are dealing with features that are no more on the standard track (deprecated), with bcd tables. The idea is to remove the <code>{{Specifications}}</code>, that implies missing data in this case, without putting back an outdated table like before</p>\n<p><code>UserDataHandler</code>, <code>DOMUserData</code>, <code>Node.setUserData</code>, and <code>Node.getUserData</code> have been removed since Firefox… 22! (only browser who has supported them).</p>\n<p>Time to say good-bye.</p>\n<p>(I fixed some gremlins on the way)</p>\n<p>I'll open a bcd PR once this lands.</p>",
            "url": "https://github.com/mdn/content/pull/6198",
            "title": "Delete DomUserData, Node.{get|set}Userdata, UserDataHandler",
            "date_modified": "2021-06-21T16:02:53.000Z",
            "author": {
                "name": "teoli2003",
                "url": "https://github.com/teoli2003"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/2764898?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>I'm trying to make sure the things we've recently documented on the CSS side at MDN also get updated on the CSS API side, so this is the <code>CSSCounterStyleRule</code> property pages.</p>\n<p>It looks like the BCD doesn't have the individual spec lines included, so I'll go add those next so that the spec tables show up.</p>",
            "url": "https://github.com/mdn/content/pull/6197",
            "title": "Adding the property pages for CSSCounterStyleRule",
            "date_modified": "2021-06-21T15:40:26.000Z",
            "author": {
                "name": "rachelandrew",
                "url": "https://github.com/rachelandrew"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1466293?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>This is part of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"924868618\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mdn/content/issues/6108\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mdn/content/issues/6108/hovercard\" href=\"https://github.com/mdn/content/issues/6108\">#6108</a>.</p>\n<p>We are dealing with features that are no more on the standard track (deprecated), with bcd tables. The idea is to remove the <code>{{Specifications}}</code>, that implies missing data in this case, without putting back an outdated table like before</p>\n<p>Dealing with <code>TreeWalker.replaceWholeText()</code> and <code>NodeIterator.replaceWholeText()</code> here.</p>\n<p>Given that the most useful info I found about dropping them was</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/1466293/122786080-35978200-d2b4-11eb-8123-726fcb03b5f4.png\"><img width=\"446\" alt=\"Screenshot 2021-06-21 at 16 37 39\" src=\"https://user-images.githubusercontent.com/1466293/122786080-35978200-d2b4-11eb-8123-726fcb03b5f4.png\" style=\"max-width:100%;\"></a></p>\n<p>I opted for a simple update: I removed the {{Specifications}} macro and replaced it by a text explaining it has been drop from the DOM standard.</p>",
            "url": "https://github.com/mdn/content/pull/6195",
            "title": "Update no-spec msg for *.expandEntityReferences",
            "date_modified": "2021-06-21T15:15:35.000Z",
            "author": {
                "name": "teoli2003",
                "url": "https://github.com/teoli2003"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/4051932?u=9695d1933d56f2d8a0bc639b0518b72cc0516903&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>subset of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"898194907\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mdn/content/issues/5193\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mdn/content/pull/5193/hovercard\" href=\"https://github.com/mdn/content/pull/5193\">#5193</a></p>\n<p>We are thinking of starting with this slice as a safe first test of Markdowning. This PR would basically check Number 5 from the list here <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"915711498\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mdn/content/issues/5808\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mdn/content/issues/5808/hovercard\" href=\"https://github.com/mdn/content/issues/5808\">#5808</a></p>\n<p>I reviewed these pages last week and they were visually identical (apart from the missing styling that having <code>&lt;var&gt;</code>s added). <a href=\"https://github.com/mdn/yari/pull/4068\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mdn/yari/pull/4068/hovercard\">We did do some more fixing</a> for the converter but that should not have these pages affected.</p>\n<p>I also did do a manual change, which is stripping the <code>span.seoSummary</code> tag, which is not yet being stripped due to a bug (fix in progress).</p>\n<details><summary>Conversion Report (basically only crying about tables)</summary>\n<h1>Report from 6/21/2021, 4:44:14 PM</h1>\n<h2>Top 20 unhandled elements</h2>\n<ul>\n<li>tr (8)</li>\n<li>td (8)</li>\n<li>th[scope=\"row\"] (8)</li>\n<li>table.standard-table (1)</li>\n</ul>\n<h2>Details per Document</h2>\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\" rel=\"nofollow\">/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map</a></h3>\n<h4>Invalid AST transformations</h4>\n<h5>tr (54:5) =&gt; tableRow</h5>\n<div class=\"snippet-clipboard-content position-relative\" data-snippet-clipboard-copy-content=\"type: &quot;html&quot;\nvalue: &quot;&lt;th scope=\\&quot;row\\&quot;&gt;&lt;/th&gt;&quot;\n\"><pre><code>type: \"html\"\nvalue: \"&lt;th scope=\\\"row\\\"&gt;&lt;/th&gt;\"\n</code></pre></div>\n<h5>td (65:7) =&gt; tableCell</h5>\n<div class=\"snippet-clipboard-content position-relative\" data-snippet-clipboard-copy-content=\"type: &quot;paragraph&quot;\nsummary: &quot;The Map object holds key-value\\n    pairs and remembers the original insertion order of the keys. Any value (both\\n  objects and {{Z2xvc3NhcnkoIlByaW1pdGl2ZSIsICJwcmltaXRpdmUgdmFsdWVzIik=}}) may be used as either a key\\n  or a value.&quot;\nrowIndex: 1\nshouldWrap: true\nchildren: \n  type: &quot;text&quot;\n  value: &quot;An &quot;\n  type: &quot;inlineCode&quot;\n  value: &quot;Object&quot;\n  type: &quot;text&quot;\n  value: &quot; has a prototype, so it contains default keys that could collide with your own keys if you're not careful.&quot;,type: &quot;blockquote&quot;\nchildren: \n  type: &quot;paragraph&quot;\n  children: \n    type: &quot;strong&quot;\n    children: \n      type: &quot;text&quot;\n      value: &quot;Note:&quot;\n    type: &quot;text&quot;\n    value: &quot; As of ES5, this can be bypassed by using {{anN4cmVmKCJPYmplY3QuY3JlYXRlIiwgIk9iamVjdC5jcmVhdGUobnVsbCkiKQ==}}, but this is seldom done.&quot;\n\"><pre><code>type: \"paragraph\"\nsummary: \"The Map object holds key-value\\n    pairs and remembers the original insertion order of the keys. Any value (both\\n  objects and {{Z2xvc3NhcnkoIlByaW1pdGl2ZSIsICJwcmltaXRpdmUgdmFsdWVzIik=}}) may be used as either a key\\n  or a value.\"\nrowIndex: 1\nshouldWrap: true\nchildren: \n  type: \"text\"\n  value: \"An \"\n  type: \"inlineCode\"\n  value: \"Object\"\n  type: \"text\"\n  value: \" has a prototype, so it contains default keys that could collide with your own keys if you're not careful.\",type: \"blockquote\"\nchildren: \n  type: \"paragraph\"\n  children: \n    type: \"strong\"\n    children: \n      type: \"text\"\n      value: \"Note:\"\n    type: \"text\"\n    value: \" As of ES5, this can be bypassed by using {{anN4cmVmKCJPYmplY3QuY3JlYXRlIiwgIk9iamVjdC5jcmVhdGUobnVsbCkiKQ==}}, but this is seldom done.\"\n</code></pre></div>\n<h5>tr (61:5) =&gt; tableRow</h5>\n<div class=\"snippet-clipboard-content position-relative\" data-snippet-clipboard-copy-content=\"type: &quot;html&quot;\nvalue: &quot;&lt;th scope=\\&quot;row\\&quot;&gt;Accidental Keys&lt;/th&gt;&quot;,type: &quot;html&quot;\nvalue: &quot;&lt;td&gt;&lt;p&gt;An &lt;code&gt;Object&lt;/code&gt; has a prototype, so it contains default keys that could\\ncollide with your own keys if you're not careful.&lt;/p&gt;&lt;div class=\\&quot;notecard note\\&quot;&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; As of ES5, this can be bypassed by using\\n{{anN4cmVmKCJPYmplY3QuY3JlYXRlIiwgIk9iamVjdC5jcmVhdGUobnVsbCkiKQ==}}, but this is seldom done.&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;&quot;\n\"><pre><code>type: \"html\"\nvalue: \"&lt;th scope=\\\"row\\\"&gt;Accidental Keys&lt;/th&gt;\",type: \"html\"\nvalue: \"&lt;td&gt;&lt;p&gt;An &lt;code&gt;Object&lt;/code&gt; has a prototype, so it contains default keys that could\\ncollide with your own keys if you're not careful.&lt;/p&gt;&lt;div class=\\\"notecard note\\\"&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; As of ES5, this can be bypassed by using\\n{{anN4cmVmKCJPYmplY3QuY3JlYXRlIiwgIk9iamVjdC5jcmVhdGUobnVsbCkiKQ==}}, but this is seldom done.&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;\"\n</code></pre></div>\n<h5>tr (76:5) =&gt; tableRow</h5>\n<div class=\"snippet-clipboard-content position-relative\" data-snippet-clipboard-copy-content=\"type: &quot;html&quot;\nvalue: &quot;&lt;th scope=\\&quot;row\\&quot;&gt;Key Types&lt;/th&gt;&quot;\n\"><pre><code>type: \"html\"\nvalue: \"&lt;th scope=\\\"row\\\"&gt;Key Types&lt;/th&gt;\"\n</code></pre></div>\n<h5>td (85:7) =&gt; tableCell</h5>\n<div class=\"snippet-clipboard-content position-relative\" data-snippet-clipboard-copy-content=\"type: &quot;paragraph&quot;\nsummary: &quot;The Map object holds key-value\\n    pairs and remembers the original insertion order of the keys. Any value (both\\n  objects and {{Z2xvc3NhcnkoIlByaW1pdGl2ZSIsICJwcmltaXRpdmUgdmFsdWVzIik=}}) may be used as either a key\\n  or a value.&quot;\nrowIndex: 3\nshouldWrap: true\nchildren: \n  type: &quot;text&quot;\n  value: &quot;The keys in &quot;\n  type: &quot;inlineCode&quot;\n  value: &quot;Map&quot;\n  type: &quot;text&quot;\n  value: &quot; are ordered in a simple, straightforward way: A &quot;\n  type: &quot;inlineCode&quot;\n  value: &quot;Map&quot;\n  type: &quot;text&quot;\n  value: &quot; object iterates entries, keys, and values in the order of entry insertion.&quot;\n\"><pre><code>type: \"paragraph\"\nsummary: \"The Map object holds key-value\\n    pairs and remembers the original insertion order of the keys. Any value (both\\n  objects and {{Z2xvc3NhcnkoIlByaW1pdGl2ZSIsICJwcmltaXRpdmUgdmFsdWVzIik=}}) may be used as either a key\\n  or a value.\"\nrowIndex: 3\nshouldWrap: true\nchildren: \n  type: \"text\"\n  value: \"The keys in \"\n  type: \"inlineCode\"\n  value: \"Map\"\n  type: \"text\"\n  value: \" are ordered in a simple, straightforward way: A \"\n  type: \"inlineCode\"\n  value: \"Map\"\n  type: \"text\"\n  value: \" object iterates entries, keys, and values in the order of entry insertion.\"\n</code></pre></div>\n<h5>td (90:7) =&gt; tableCell</h5>\n<div class=\"snippet-clipboard-content position-relative\" data-snippet-clipboard-copy-content=\"type: &quot;paragraph&quot;\nsummary: &quot;The Map object holds key-value\\n    pairs and remembers the original insertion order of the keys. Any value (both\\n  objects and {{Z2xvc3NhcnkoIlByaW1pdGl2ZSIsICJwcmltaXRpdmUgdmFsdWVzIik=}}) may be used as either a key\\n  or a value.&quot;\nrowIndex: 3\nshouldWrap: true\nchildren: \n  type: &quot;text&quot;\n  value: &quot;Although the keys of an ordinary &quot;\n  type: &quot;inlineCode&quot;\n  value: &quot;Object&quot;\n  type: &quot;text&quot;\n  value: &quot; are ordered now, this was not always the case, and the order is complex. As a result, it's best not to rely on property order.&quot;,type: &quot;paragraph&quot;\nsummary: &quot;The Map object holds key-value\\n    pairs and remembers the original insertion order of the keys. Any value (both\\n  objects and {{Z2xvc3NhcnkoIlByaW1pdGl2ZSIsICJwcmltaXRpdmUgdmFsdWVzIik=}}) may be used as either a key\\n  or a value.&quot;\nrowIndex: 3\nshouldWrap: true\nchildren: \n  type: &quot;text&quot;\n  value: &quot;The order was first defined for own properties only in ECMAScript 2015; ECMAScript 2020 defines order for inherited properties as well. See the &quot;\n  type: &quot;link&quot;\n  title: \n\n  url: &quot;https://tc39.es/ecma262/#sec-ordinaryownpropertykeys&quot;\n  children: \n    type: &quot;text&quot;\n    value: &quot;OrdinaryOwnPropertyKeys&quot;\n  type: &quot;text&quot;\n  value: &quot; and &quot;\n  type: &quot;link&quot;\n  title: \n\n  url: &quot;https://tc39.es/ecma262/#sec-enumerate-object-properties&quot;\n  children: \n    type: &quot;text&quot;\n    value: &quot;EnumerateObjectProperties&quot;\n  type: &quot;text&quot;\n  value: &quot; abstract specification operations. But note that no single mechanism iterates &quot;\n  type: &quot;strong&quot;\n  children: \n    type: &quot;text&quot;\n    value: &quot;all&quot;\n  type: &quot;text&quot;\n  value: &quot; of an object's properties; the various mechanisms each include different subsets of properties. ({{anN4cmVmKCJTdGF0ZW1lbnRzL2Zvci4uLmluIiwKICAgICAgICAgICJmb3ItaW4iKQ==}} includes only enumerable string-keyed properties; {{anN4cmVmKCJPYmplY3Qua2V5cyIp}} includes only own, enumerable, string-keyed properties; {{anN4cmVmKCJPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyIp}} includes own, string-keyed properties even if non-enumerable; {{anN4cmVmKCJPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzIik=}} does the same for just &quot;\n  type: &quot;inlineCode&quot;\n  value: &quot;Symbol&quot;\n  type: &quot;text&quot;\n  value: &quot;-keyed properties, etc.)&quot;\n\"><pre><code>type: \"paragraph\"\nsummary: \"The Map object holds key-value\\n    pairs and remembers the original insertion order of the keys. Any value (both\\n  objects and {{Z2xvc3NhcnkoIlByaW1pdGl2ZSIsICJwcmltaXRpdmUgdmFsdWVzIik=}}) may be used as either a key\\n  or a value.\"\nrowIndex: 3\nshouldWrap: true\nchildren: \n  type: \"text\"\n  value: \"Although the keys of an ordinary \"\n  type: \"inlineCode\"\n  value: \"Object\"\n  type: \"text\"\n  value: \" are ordered now, this was not always the case, and the order is complex. As a result, it's best not to rely on property order.\",type: \"paragraph\"\nsummary: \"The Map object holds key-value\\n    pairs and remembers the original insertion order of the keys. Any value (both\\n  objects and {{Z2xvc3NhcnkoIlByaW1pdGl2ZSIsICJwcmltaXRpdmUgdmFsdWVzIik=}}) may be used as either a key\\n  or a value.\"\nrowIndex: 3\nshouldWrap: true\nchildren: \n  type: \"text\"\n  value: \"The order was first defined for own properties only in ECMAScript 2015; ECMAScript 2020 defines order for inherited properties as well. See the \"\n  type: \"link\"\n  title: \n\n  url: \"https://tc39.es/ecma262/#sec-ordinaryownpropertykeys\"\n  children: \n    type: \"text\"\n    value: \"OrdinaryOwnPropertyKeys\"\n  type: \"text\"\n  value: \" and \"\n  type: \"link\"\n  title: \n\n  url: \"https://tc39.es/ecma262/#sec-enumerate-object-properties\"\n  children: \n    type: \"text\"\n    value: \"EnumerateObjectProperties\"\n  type: \"text\"\n  value: \" abstract specification operations. But note that no single mechanism iterates \"\n  type: \"strong\"\n  children: \n    type: \"text\"\n    value: \"all\"\n  type: \"text\"\n  value: \" of an object's properties; the various mechanisms each include different subsets of properties. ({{anN4cmVmKCJTdGF0ZW1lbnRzL2Zvci4uLmluIiwKICAgICAgICAgICJmb3ItaW4iKQ==}} includes only enumerable string-keyed properties; {{anN4cmVmKCJPYmplY3Qua2V5cyIp}} includes only own, enumerable, string-keyed properties; {{anN4cmVmKCJPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyIp}} includes own, string-keyed properties even if non-enumerable; {{anN4cmVmKCJPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzIik=}} does the same for just \"\n  type: \"inlineCode\"\n  value: \"Symbol\"\n  type: \"text\"\n  value: \"-keyed properties, etc.)\"\n</code></pre></div>\n<h5>tr (83:5) =&gt; tableRow</h5>\n<div class=\"snippet-clipboard-content position-relative\" data-snippet-clipboard-copy-content=\"type: &quot;html&quot;\nvalue: &quot;&lt;th scope=\\&quot;row\\&quot;&gt;Key Order&lt;/th&gt;&quot;,type: &quot;html&quot;\nvalue: &quot;&lt;td&gt;&lt;p&gt;The keys in &lt;code&gt;Map&lt;/code&gt; are ordered in a simple, straightforward way: A\\n&lt;code&gt;Map&lt;/code&gt; object iterates entries, keys, and values in the order of entry\\ninsertion.&lt;/p&gt;&lt;/td&gt;&quot;,type: &quot;html&quot;\nvalue: &quot;&lt;td&gt;&lt;p&gt;Although the keys of an ordinary &lt;code&gt;Object&lt;/code&gt; are ordered now, this was not always the case, and the order is complex. As a result, it's best not to rely\\non property order.&lt;/p&gt;&lt;p&gt;The order was first defined for own properties only in ECMAScript 2015;\\nECMAScript 2020 defines order for inherited properties as well. See the &lt;a href=\\&quot;https://tc39.es/ecma262/#sec-ordinaryownpropertykeys\\&quot;&gt;OrdinaryOwnPropertyKeys&lt;/a&gt;\\nand &lt;a href=\\&quot;https://tc39.es/ecma262/#sec-enumerate-object-properties\\&quot;&gt;EnumerateObjectProperties&lt;/a&gt;\\nabstract specification operations. But note that no single mechanism iterates\\n&lt;strong&gt;all&lt;/strong&gt; of an object's properties; the various mechanisms each\\ninclude different subsets of properties. ({{anN4cmVmKCJTdGF0ZW1lbnRzL2Zvci4uLmluIiwKICAgICAgICAgICJmb3ItaW4iKQ==}} includes only enumerable string-keyed properties;\\n{{anN4cmVmKCJPYmplY3Qua2V5cyIp}} includes only own, enumerable, string-keyed\\nproperties; {{anN4cmVmKCJPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyIp}} includes own, string-keyed\\nproperties even if non-enumerable; {{anN4cmVmKCJPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzIik=}}\\ndoes the same for just &lt;code&gt;Symbol&lt;/code&gt;-keyed properties, etc.)&lt;/p&gt;&lt;/td&gt;&quot;\n\"><pre><code>type: \"html\"\nvalue: \"&lt;th scope=\\\"row\\\"&gt;Key Order&lt;/th&gt;\",type: \"html\"\nvalue: \"&lt;td&gt;&lt;p&gt;The keys in &lt;code&gt;Map&lt;/code&gt; are ordered in a simple, straightforward way: A\\n&lt;code&gt;Map&lt;/code&gt; object iterates entries, keys, and values in the order of entry\\ninsertion.&lt;/p&gt;&lt;/td&gt;\",type: \"html\"\nvalue: \"&lt;td&gt;&lt;p&gt;Although the keys of an ordinary &lt;code&gt;Object&lt;/code&gt; are ordered now, this was not always the case, and the order is complex. As a result, it's best not to rely\\non property order.&lt;/p&gt;&lt;p&gt;The order was first defined for own properties only in ECMAScript 2015;\\nECMAScript 2020 defines order for inherited properties as well. See the &lt;a href=\\\"https://tc39.es/ecma262/#sec-ordinaryownpropertykeys\\\"&gt;OrdinaryOwnPropertyKeys&lt;/a&gt;\\nand &lt;a href=\\\"https://tc39.es/ecma262/#sec-enumerate-object-properties\\\"&gt;EnumerateObjectProperties&lt;/a&gt;\\nabstract specification operations. But note that no single mechanism iterates\\n&lt;strong&gt;all&lt;/strong&gt; of an object's properties; the various mechanisms each\\ninclude different subsets of properties. ({{anN4cmVmKCJTdGF0ZW1lbnRzL2Zvci4uLmluIiwKICAgICAgICAgICJmb3ItaW4iKQ==}} includes only enumerable string-keyed properties;\\n{{anN4cmVmKCJPYmplY3Qua2V5cyIp}} includes only own, enumerable, string-keyed\\nproperties; {{anN4cmVmKCJPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyIp}} includes own, string-keyed\\nproperties even if non-enumerable; {{anN4cmVmKCJPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzIik=}}\\ndoes the same for just &lt;code&gt;Symbol&lt;/code&gt;-keyed properties, etc.)&lt;/p&gt;&lt;/td&gt;\"\n</code></pre></div>\n<h5>tr (108:5) =&gt; tableRow</h5>\n<div class=\"snippet-clipboard-content position-relative\" data-snippet-clipboard-copy-content=\"type: &quot;html&quot;\nvalue: &quot;&lt;th scope=\\&quot;row\\&quot;&gt;&lt;p&gt;Size&lt;/p&gt;&lt;/th&gt;&quot;\n\"><pre><code>type: \"html\"\nvalue: \"&lt;th scope=\\\"row\\\"&gt;&lt;p&gt;Size&lt;/p&gt;&lt;/th&gt;\"\n</code></pre></div>\n<h5>td (121:7) =&gt; tableCell</h5>\n<div class=\"snippet-clipboard-content position-relative\" data-snippet-clipboard-copy-content=\"type: &quot;paragraph&quot;\nsummary: &quot;The Map object holds key-value\\n    pairs and remembers the original insertion order of the keys. Any value (both\\n  objects and {{Z2xvc3NhcnkoIlByaW1pdGl2ZSIsICJwcmltaXRpdmUgdmFsdWVzIik=}}) may be used as either a key\\n  or a value.&quot;\nrowIndex: 5\nshouldWrap: true\nchildren: \n  type: &quot;inlineCode&quot;\n  value: &quot;Object&quot;\n  type: &quot;text&quot;\n  value: &quot; does not implement an &quot;\n  type: &quot;link&quot;\n  title: \n\n  url: &quot;/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol&quot;\n  children: \n    type: &quot;text&quot;\n    value: &quot;iteration protocol&quot;\n  type: &quot;text&quot;\n  value: &quot;, and so objects are not directly iterable using the JavaScript &quot;\n  type: &quot;link&quot;\n  title: \n\n  url: &quot;/en-US/docs/Web/JavaScript/Reference/Statements/for...of&quot;\n  children: \n    type: &quot;text&quot;\n    value: &quot;for...of&quot;\n  type: &quot;text&quot;\n  value: &quot; statement (by default).&quot;,type: &quot;blockquote&quot;\nchildren: \n  type: &quot;paragraph&quot;\n  children: \n    type: &quot;strong&quot;\n    children: \n      type: &quot;text&quot;\n      value: &quot;Note:&quot;\n  type: &quot;list&quot;\n  ordered: false\n  start: \n\n  spread: false\n  children: \n    type: &quot;listItem&quot;\n    spread: false\n    children: \n      type: &quot;paragraph&quot;\n      children: \n        type: &quot;text&quot;\n        value: &quot;An object can implement the iteration protocol, or you can get an iterable for an object using &quot;\n        type: &quot;link&quot;\n        title: \n\n        url: &quot;/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys&quot;\n        children: \n          type: &quot;inlineCode&quot;\n          value: &quot;Object.keys&quot;\n        type: &quot;text&quot;\n        value: &quot; or &quot;\n        type: &quot;link&quot;\n        title: \n\n        url: &quot;/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries&quot;\n        children: \n          type: &quot;inlineCode&quot;\n          value: &quot;Object.entries&quot;\n        type: &quot;text&quot;\n        value: &quot;.&quot;\n    type: &quot;listItem&quot;\n    spread: false\n    children: \n      type: &quot;paragraph&quot;\n      children: \n        type: &quot;text&quot;\n        value: &quot;The &quot;\n        type: &quot;link&quot;\n        title: \n\n        url: &quot;/en-US/docs/Web/JavaScript/Reference/Statements/for...in&quot;\n        children: \n          type: &quot;text&quot;\n          value: &quot;for...in&quot;\n        type: &quot;text&quot;\n        value: &quot; statement allows you to iterate over the &quot;\n        type: &quot;emphasis&quot;\n        children: \n          type: &quot;text&quot;\n          value: &quot;enumerable&quot;\n        type: &quot;text&quot;\n        value: &quot; properties of an object.&quot;\n\"><pre><code>type: \"paragraph\"\nsummary: \"The Map object holds key-value\\n    pairs and remembers the original insertion order of the keys. Any value (both\\n  objects and {{Z2xvc3NhcnkoIlByaW1pdGl2ZSIsICJwcmltaXRpdmUgdmFsdWVzIik=}}) may be used as either a key\\n  or a value.\"\nrowIndex: 5\nshouldWrap: true\nchildren: \n  type: \"inlineCode\"\n  value: \"Object\"\n  type: \"text\"\n  value: \" does not implement an \"\n  type: \"link\"\n  title: \n\n  url: \"/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol\"\n  children: \n    type: \"text\"\n    value: \"iteration protocol\"\n  type: \"text\"\n  value: \", and so objects are not directly iterable using the JavaScript \"\n  type: \"link\"\n  title: \n\n  url: \"/en-US/docs/Web/JavaScript/Reference/Statements/for...of\"\n  children: \n    type: \"text\"\n    value: \"for...of\"\n  type: \"text\"\n  value: \" statement (by default).\",type: \"blockquote\"\nchildren: \n  type: \"paragraph\"\n  children: \n    type: \"strong\"\n    children: \n      type: \"text\"\n      value: \"Note:\"\n  type: \"list\"\n  ordered: false\n  start: \n\n  spread: false\n  children: \n    type: \"listItem\"\n    spread: false\n    children: \n      type: \"paragraph\"\n      children: \n        type: \"text\"\n        value: \"An object can implement the iteration protocol, or you can get an iterable for an object using \"\n        type: \"link\"\n        title: \n\n        url: \"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\"\n        children: \n          type: \"inlineCode\"\n          value: \"Object.keys\"\n        type: \"text\"\n        value: \" or \"\n        type: \"link\"\n        title: \n\n        url: \"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries\"\n        children: \n          type: \"inlineCode\"\n          value: \"Object.entries\"\n        type: \"text\"\n        value: \".\"\n    type: \"listItem\"\n    spread: false\n    children: \n      type: \"paragraph\"\n      children: \n        type: \"text\"\n        value: \"The \"\n        type: \"link\"\n        title: \n\n        url: \"/en-US/docs/Web/JavaScript/Reference/Statements/for...in\"\n        children: \n          type: \"text\"\n          value: \"for...in\"\n        type: \"text\"\n        value: \" statement allows you to iterate over the \"\n        type: \"emphasis\"\n        children: \n          type: \"text\"\n          value: \"enumerable\"\n        type: \"text\"\n        value: \" properties of an object.\"\n</code></pre></div>\n<h5>tr (116:5) =&gt; tableRow</h5>\n<div class=\"snippet-clipboard-content position-relative\" data-snippet-clipboard-copy-content=\"type: &quot;html&quot;\nvalue: &quot;&lt;th scope=\\&quot;row\\&quot;&gt;Iteration&lt;/th&gt;&quot;,type: &quot;html&quot;\nvalue: &quot;&lt;td&gt;&lt;p&gt;&lt;code&gt;Object&lt;/code&gt; does not implement an &lt;a href=\\&quot;/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol\\&quot;&gt;iteration\\nprotocol&lt;/a&gt;, and so objects are not directly iterable using the JavaScript &lt;a href=\\&quot;/en-US/docs/Web/JavaScript/Reference/Statements/for...of\\&quot;&gt;for...of&lt;/a&gt;\\nstatement (by default).&lt;/p&gt;&lt;div class=\\&quot;notecard note\\&quot;&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;An object can implement the iteration protocol, or you can get an iterable\\nfor an object using &lt;a href=\\&quot;/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\\&quot;&gt;&lt;code&gt;Object.keys&lt;/code&gt;&lt;/a&gt; or &lt;a href=\\&quot;/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries\\&quot;&gt;&lt;code&gt;Object.entries&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;The &lt;a href=\\&quot;/en-US/docs/Web/JavaScript/Reference/Statements/for...in\\&quot;&gt;for...in&lt;/a&gt;\\nstatement allows you to iterate over the &lt;em&gt;enumerable&lt;/em&gt; properties of\\nan object.&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/td&gt;&quot;\n\"><pre><code>type: \"html\"\nvalue: \"&lt;th scope=\\\"row\\\"&gt;Iteration&lt;/th&gt;\",type: \"html\"\nvalue: \"&lt;td&gt;&lt;p&gt;&lt;code&gt;Object&lt;/code&gt; does not implement an &lt;a href=\\\"/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol\\\"&gt;iteration\\nprotocol&lt;/a&gt;, and so objects are not directly iterable using the JavaScript &lt;a href=\\\"/en-US/docs/Web/JavaScript/Reference/Statements/for...of\\\"&gt;for...of&lt;/a&gt;\\nstatement (by default).&lt;/p&gt;&lt;div class=\\\"notecard note\\\"&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;An object can implement the iteration protocol, or you can get an iterable\\nfor an object using &lt;a href=\\\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\\\"&gt;&lt;code&gt;Object.keys&lt;/code&gt;&lt;/a&gt; or &lt;a href=\\\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries\\\"&gt;&lt;code&gt;Object.entries&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;The &lt;a href=\\\"/en-US/docs/Web/JavaScript/Reference/Statements/for...in\\\"&gt;for...in&lt;/a&gt;\\nstatement allows you to iterate over the &lt;em&gt;enumerable&lt;/em&gt; properties of\\nan object.&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/td&gt;\"\n</code></pre></div>\n<h5>td (147:7) =&gt; tableCell</h5>\n<div class=\"snippet-clipboard-content position-relative\" data-snippet-clipboard-copy-content=\"type: &quot;paragraph&quot;\nsummary: &quot;The Map object holds key-value\\n    pairs and remembers the original insertion order of the keys. Any value (both\\n  objects and {{Z2xvc3NhcnkoIlByaW1pdGl2ZSIsICJwcmltaXRpdmUgdmFsdWVzIik=}}) may be used as either a key\\n  or a value.&quot;\nrowIndex: 6\nshouldWrap: true\nchildren: \n  type: &quot;text&quot;\n  value: &quot;Performs better in scenarios involving frequent additions and removals of key-value pairs.&quot;\n\"><pre><code>type: \"paragraph\"\nsummary: \"The Map object holds key-value\\n    pairs and remembers the original insertion order of the keys. Any value (both\\n  objects and {{Z2xvc3NhcnkoIlByaW1pdGl2ZSIsICJwcmltaXRpdmUgdmFsdWVzIik=}}) may be used as either a key\\n  or a value.\"\nrowIndex: 6\nshouldWrap: true\nchildren: \n  type: \"text\"\n  value: \"Performs better in scenarios involving frequent additions and removals of key-value pairs.\"\n</code></pre></div>\n<h5>td (151:7) =&gt; tableCell</h5>\n<div class=\"snippet-clipboard-content position-relative\" data-snippet-clipboard-copy-content=\"type: &quot;paragraph&quot;\nsummary: &quot;The Map object holds key-value\\n    pairs and remembers the original insertion order of the keys. Any value (both\\n  objects and {{Z2xvc3NhcnkoIlByaW1pdGl2ZSIsICJwcmltaXRpdmUgdmFsdWVzIik=}}) may be used as either a key\\n  or a value.&quot;\nrowIndex: 6\nshouldWrap: true\nchildren: \n  type: &quot;text&quot;\n  value: &quot;Not optimized for frequent additions and removals of key-value pairs.&quot;\n\"><pre><code>type: \"paragraph\"\nsummary: \"The Map object holds key-value\\n    pairs and remembers the original insertion order of the keys. Any value (both\\n  objects and {{Z2xvc3NhcnkoIlByaW1pdGl2ZSIsICJwcmltaXRpdmUgdmFsdWVzIik=}}) may be used as either a key\\n  or a value.\"\nrowIndex: 6\nshouldWrap: true\nchildren: \n  type: \"text\"\n  value: \"Not optimized for frequent additions and removals of key-value pairs.\"\n</code></pre></div>\n<h5>tr (145:5) =&gt; tableRow</h5>\n<div class=\"snippet-clipboard-content position-relative\" data-snippet-clipboard-copy-content=\"type: &quot;html&quot;\nvalue: &quot;&lt;th scope=\\&quot;row\\&quot;&gt;Performance&lt;/th&gt;&quot;,type: &quot;html&quot;\nvalue: &quot;&lt;td&gt;&lt;p&gt;Performs better in scenarios involving frequent additions and removals of\\nkey-value pairs.&lt;/p&gt;&lt;/td&gt;&quot;,type: &quot;html&quot;\nvalue: &quot;&lt;td&gt;&lt;p&gt;Not optimized for frequent additions and removals of key-value pairs.&lt;/p&gt;&lt;/td&gt;&quot;\n\"><pre><code>type: \"html\"\nvalue: \"&lt;th scope=\\\"row\\\"&gt;Performance&lt;/th&gt;\",type: \"html\"\nvalue: \"&lt;td&gt;&lt;p&gt;Performs better in scenarios involving frequent additions and removals of\\nkey-value pairs.&lt;/p&gt;&lt;/td&gt;\",type: \"html\"\nvalue: \"&lt;td&gt;&lt;p&gt;Not optimized for frequent additions and removals of key-value pairs.&lt;/p&gt;&lt;/td&gt;\"\n</code></pre></div>\n<h5>td (157:7) =&gt; tableCell</h5>\n<div class=\"snippet-clipboard-content position-relative\" data-snippet-clipboard-copy-content=\"type: &quot;paragraph&quot;\nsummary: &quot;The Map object holds key-value\\n    pairs and remembers the original insertion order of the keys. Any value (both\\n  objects and {{Z2xvc3NhcnkoIlByaW1pdGl2ZSIsICJwcmltaXRpdmUgdmFsdWVzIik=}}) may be used as either a key\\n  or a value.&quot;\nrowIndex: 7\nshouldWrap: true\nchildren: \n  type: &quot;text&quot;\n  value: &quot;No native support for serialization or parsing.&quot;,type: &quot;paragraph&quot;\nsummary: &quot;The Map object holds key-value\\n    pairs and remembers the original insertion order of the keys. Any value (both\\n  objects and {{Z2xvc3NhcnkoIlByaW1pdGl2ZSIsICJwcmltaXRpdmUgdmFsdWVzIik=}}) may be used as either a key\\n  or a value.&quot;\nrowIndex: 7\nshouldWrap: true\nchildren: \n  type: &quot;text&quot;\n  value: &quot;(But you can build your own serialization and parsing support for &quot;\n  type: &quot;inlineCode&quot;\n  value: &quot;Map&quot;\n  type: &quot;text&quot;\n  value: &quot; by using {{anN4cmVmKCJKU09OLnN0cmluZ2lmeSgpIik=}} with its &quot;\n  type: &quot;emphasis&quot;\n  children: \n    type: &quot;text&quot;\n    value: &quot;replacer&quot;\n  type: &quot;text&quot;\n  value: &quot; argument, and by using {{anN4cmVmKCJKU09OLnBhcnNlKCkiKQ==}} with its &quot;\n  type: &quot;emphasis&quot;\n  children: \n    type: &quot;text&quot;\n    value: &quot;reviver&quot;\n  type: &quot;text&quot;\n  value: &quot; argument. See the Stack Overflow question &quot;\n  type: &quot;link&quot;\n  title: \n\n  url: &quot;https://stackoverflow.com/q/29085197/&quot;\n  children: \n    type: &quot;text&quot;\n    value: &quot;How do you JSON.stringify an ES6 Map?&quot;\n  type: &quot;text&quot;\n  value: &quot;).&quot;\n\"><pre><code>type: \"paragraph\"\nsummary: \"The Map object holds key-value\\n    pairs and remembers the original insertion order of the keys. Any value (both\\n  objects and {{Z2xvc3NhcnkoIlByaW1pdGl2ZSIsICJwcmltaXRpdmUgdmFsdWVzIik=}}) may be used as either a key\\n  or a value.\"\nrowIndex: 7\nshouldWrap: true\nchildren: \n  type: \"text\"\n  value: \"No native support for serialization or parsing.\",type: \"paragraph\"\nsummary: \"The Map object holds key-value\\n    pairs and remembers the original insertion order of the keys. Any value (both\\n  objects and {{Z2xvc3NhcnkoIlByaW1pdGl2ZSIsICJwcmltaXRpdmUgdmFsdWVzIik=}}) may be used as either a key\\n  or a value.\"\nrowIndex: 7\nshouldWrap: true\nchildren: \n  type: \"text\"\n  value: \"(But you can build your own serialization and parsing support for \"\n  type: \"inlineCode\"\n  value: \"Map\"\n  type: \"text\"\n  value: \" by using {{anN4cmVmKCJKU09OLnN0cmluZ2lmeSgpIik=}} with its \"\n  type: \"emphasis\"\n  children: \n    type: \"text\"\n    value: \"replacer\"\n  type: \"text\"\n  value: \" argument, and by using {{anN4cmVmKCJKU09OLnBhcnNlKCkiKQ==}} with its \"\n  type: \"emphasis\"\n  children: \n    type: \"text\"\n    value: \"reviver\"\n  type: \"text\"\n  value: \" argument. See the Stack Overflow question \"\n  type: \"link\"\n  title: \n\n  url: \"https://stackoverflow.com/q/29085197/\"\n  children: \n    type: \"text\"\n    value: \"How do you JSON.stringify an ES6 Map?\"\n  type: \"text\"\n  value: \").\"\n</code></pre></div>\n<h5>td (161:7) =&gt; tableCell</h5>\n<div class=\"snippet-clipboard-content position-relative\" data-snippet-clipboard-copy-content=\"type: &quot;paragraph&quot;\nsummary: &quot;The Map object holds key-value\\n    pairs and remembers the original insertion order of the keys. Any value (both\\n  objects and {{Z2xvc3NhcnkoIlByaW1pdGl2ZSIsICJwcmltaXRpdmUgdmFsdWVzIik=}}) may be used as either a key\\n  or a value.&quot;\nrowIndex: 7\nshouldWrap: true\nchildren: \n  type: &quot;text&quot;\n  value: &quot;Native support for serialization from {{anN4cmVmKCJPYmplY3QiKQ==}} to JSON, using {{anN4cmVmKCJKU09OLnN0cmluZ2lmeSgpIik=}}.&quot;,type: &quot;paragraph&quot;\nsummary: &quot;The Map object holds key-value\\n    pairs and remembers the original insertion order of the keys. Any value (both\\n  objects and {{Z2xvc3NhcnkoIlByaW1pdGl2ZSIsICJwcmltaXRpdmUgdmFsdWVzIik=}}) may be used as either a key\\n  or a value.&quot;\nrowIndex: 7\nshouldWrap: true\nchildren: \n  type: &quot;text&quot;\n  value: &quot;Native support for parsing from JSON to {{anN4cmVmKCJPYmplY3QiKQ==}}, using {{anN4cmVmKCJKU09OLnBhcnNlKCkiKQ==}}.&quot;\n\"><pre><code>type: \"paragraph\"\nsummary: \"The Map object holds key-value\\n    pairs and remembers the original insertion order of the keys. Any value (both\\n  objects and {{Z2xvc3NhcnkoIlByaW1pdGl2ZSIsICJwcmltaXRpdmUgdmFsdWVzIik=}}) may be used as either a key\\n  or a value.\"\nrowIndex: 7\nshouldWrap: true\nchildren: \n  type: \"text\"\n  value: \"Native support for serialization from {{anN4cmVmKCJPYmplY3QiKQ==}} to JSON, using {{anN4cmVmKCJKU09OLnN0cmluZ2lmeSgpIik=}}.\",type: \"paragraph\"\nsummary: \"The Map object holds key-value\\n    pairs and remembers the original insertion order of the keys. Any value (both\\n  objects and {{Z2xvc3NhcnkoIlByaW1pdGl2ZSIsICJwcmltaXRpdmUgdmFsdWVzIik=}}) may be used as either a key\\n  or a value.\"\nrowIndex: 7\nshouldWrap: true\nchildren: \n  type: \"text\"\n  value: \"Native support for parsing from JSON to {{anN4cmVmKCJPYmplY3QiKQ==}}, using {{anN4cmVmKCJKU09OLnBhcnNlKCkiKQ==}}.\"\n</code></pre></div>\n<h5>tr (155:5) =&gt; tableRow</h5>\n<div class=\"snippet-clipboard-content position-relative\" data-snippet-clipboard-copy-content=\"type: &quot;html&quot;\nvalue: &quot;&lt;th scope=\\&quot;row\\&quot;&gt;Serialization and parsing&lt;/th&gt;&quot;,type: &quot;html&quot;\nvalue: &quot;&lt;td&gt;&lt;p&gt;No native support for serialization or parsing.&lt;/p&gt;&lt;p&gt;(But you can build your own serialization and parsing support for &lt;code&gt;Map&lt;/code&gt; by using {{anN4cmVmKCJKU09OLnN0cmluZ2lmeSgpIik=}} with its &lt;em&gt;replacer&lt;/em&gt; argument, and by using {{anN4cmVmKCJKU09OLnBhcnNlKCkiKQ==}} with its &lt;em&gt;reviver&lt;/em&gt; argument. See the Stack Overflow question &lt;a href=\\&quot;https://stackoverflow.com/q/29085197/\\&quot;&gt;How do you JSON.stringify an ES6 Map?&lt;/a&gt;).&lt;/p&gt;&lt;/td&gt;&quot;,type: &quot;html&quot;\nvalue: &quot;&lt;td&gt;&lt;p&gt;Native support for serialization from {{anN4cmVmKCJPYmplY3QiKQ==}} to JSON, using {{anN4cmVmKCJKU09OLnN0cmluZ2lmeSgpIik=}}.&lt;/p&gt;&lt;p&gt;Native support for parsing from JSON to {{anN4cmVmKCJPYmplY3QiKQ==}}, using {{anN4cmVmKCJKU09OLnBhcnNlKCkiKQ==}}.&lt;/p&gt;&lt;/td&gt;&quot;\n\"><pre><code>type: \"html\"\nvalue: \"&lt;th scope=\\\"row\\\"&gt;Serialization and parsing&lt;/th&gt;\",type: \"html\"\nvalue: \"&lt;td&gt;&lt;p&gt;No native support for serialization or parsing.&lt;/p&gt;&lt;p&gt;(But you can build your own serialization and parsing support for &lt;code&gt;Map&lt;/code&gt; by using {{anN4cmVmKCJKU09OLnN0cmluZ2lmeSgpIik=}} with its &lt;em&gt;replacer&lt;/em&gt; argument, and by using {{anN4cmVmKCJKU09OLnBhcnNlKCkiKQ==}} with its &lt;em&gt;reviver&lt;/em&gt; argument. See the Stack Overflow question &lt;a href=\\\"https://stackoverflow.com/q/29085197/\\\"&gt;How do you JSON.stringify an ES6 Map?&lt;/a&gt;).&lt;/p&gt;&lt;/td&gt;\",type: \"html\"\nvalue: \"&lt;td&gt;&lt;p&gt;Native support for serialization from {{anN4cmVmKCJPYmplY3QiKQ==}} to JSON, using {{anN4cmVmKCJKU09OLnN0cmluZ2lmeSgpIik=}}.&lt;/p&gt;&lt;p&gt;Native support for parsing from JSON to {{anN4cmVmKCJPYmplY3QiKQ==}}, using {{anN4cmVmKCJKU09OLnBhcnNlKCkiKQ==}}.&lt;/p&gt;&lt;/td&gt;\"\n</code></pre></div>\n<h5>table.standard-table (52:1) =&gt; table</h5>\n<div class=\"snippet-clipboard-content position-relative\" data-snippet-clipboard-copy-content=\"type: &quot;html&quot;\nvalue: &quot;&lt;tr&gt;&lt;th scope=\\&quot;row\\&quot;&gt;&lt;/th&gt;&lt;th scope=\\&quot;col\\&quot;&gt;Map&lt;/th&gt;&lt;th scope=\\&quot;col\\&quot;&gt;Object&lt;/th&gt;&lt;/tr&gt;&quot;,type: &quot;html&quot;\nvalue: &quot;&lt;tr&gt;&lt;th scope=\\&quot;row\\&quot;&gt;Accidental Keys&lt;/th&gt;&lt;td&gt;A &lt;code&gt;Map&lt;/code&gt; does not contain any keys by default. It only contains what\\nis explicitly put into it.&lt;/td&gt;&lt;td&gt;&lt;p&gt;An &lt;code&gt;Object&lt;/code&gt; has a prototype, so it contains default keys that could\\ncollide with your own keys if you're not careful.&lt;/p&gt;&lt;div class=\\&quot;notecard note\\&quot;&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; As of ES5, this can be bypassed by using\\n{{anN4cmVmKCJPYmplY3QuY3JlYXRlIiwgIk9iamVjdC5jcmVhdGUobnVsbCkiKQ==}}, but this is seldom done.&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&quot;,type: &quot;html&quot;\nvalue: &quot;&lt;tr&gt;&lt;th scope=\\&quot;row\\&quot;&gt;Key Types&lt;/th&gt;&lt;td&gt;A &lt;code&gt;Map&lt;/code&gt;'s keys can be any value (including functions, objects, or any\\nprimitive).&lt;/td&gt;&lt;td&gt;The keys of an &lt;code&gt;Object&lt;/code&gt; must be either a {{anN4cmVmKCJTdHJpbmciKQ==}} or a\\n{{anN4cmVmKCJTeW1ib2wiKQ==}}.&lt;/td&gt;&lt;/tr&gt;&quot;,type: &quot;html&quot;\nvalue: &quot;&lt;tr&gt;&lt;th scope=\\&quot;row\\&quot;&gt;Key Order&lt;/th&gt;&lt;td&gt;&lt;p&gt;The keys in &lt;code&gt;Map&lt;/code&gt; are ordered in a simple, straightforward way: A\\n&lt;code&gt;Map&lt;/code&gt; object iterates entries, keys, and values in the order of entry\\ninsertion.&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;Although the keys of an ordinary &lt;code&gt;Object&lt;/code&gt; are ordered now, this was not always the case, and the order is complex. As a result, it's best not to rely\\non property order.&lt;/p&gt;&lt;p&gt;The order was first defined for own properties only in ECMAScript 2015;\\nECMAScript 2020 defines order for inherited properties as well. See the &lt;a href=\\&quot;https://tc39.es/ecma262/#sec-ordinaryownpropertykeys\\&quot;&gt;OrdinaryOwnPropertyKeys&lt;/a&gt;\\nand &lt;a href=\\&quot;https://tc39.es/ecma262/#sec-enumerate-object-properties\\&quot;&gt;EnumerateObjectProperties&lt;/a&gt;\\nabstract specification operations. But note that no single mechanism iterates\\n&lt;strong&gt;all&lt;/strong&gt; of an object's properties; the various mechanisms each\\ninclude different subsets of properties. ({{anN4cmVmKCJTdGF0ZW1lbnRzL2Zvci4uLmluIiwKICAgICAgICAgICJmb3ItaW4iKQ==}} includes only enumerable string-keyed properties;\\n{{anN4cmVmKCJPYmplY3Qua2V5cyIp}} includes only own, enumerable, string-keyed\\nproperties; {{anN4cmVmKCJPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyIp}} includes own, string-keyed\\nproperties even if non-enumerable; {{anN4cmVmKCJPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzIik=}}\\ndoes the same for just &lt;code&gt;Symbol&lt;/code&gt;-keyed properties, etc.)&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&quot;,type: &quot;html&quot;\nvalue: &quot;&lt;tr&gt;&lt;th scope=\\&quot;row\\&quot;&gt;&lt;p&gt;Size&lt;/p&gt;&lt;/th&gt;&lt;td&gt;The number of items in a &lt;code&gt;Map&lt;/code&gt; is easily retrieved from its\\n{{anN4cmVmKCJNYXAucHJvdG90eXBlLnNpemUiLCAic2l6ZSIp}} property.&lt;/td&gt;&lt;td&gt;The number of items in an &lt;code&gt;Object&lt;/code&gt; must be determined manually.&lt;/td&gt;&lt;/tr&gt;&quot;,type: &quot;html&quot;\nvalue: &quot;&lt;tr&gt;&lt;th scope=\\&quot;row\\&quot;&gt;Iteration&lt;/th&gt;&lt;td&gt;A &lt;code&gt;Map&lt;/code&gt; is an &lt;a href=\\&quot;/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\\&quot;&gt;iterable&lt;/a&gt;, so it can be\\ndirectly iterated.&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;code&gt;Object&lt;/code&gt; does not implement an &lt;a href=\\&quot;/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol\\&quot;&gt;iteration\\nprotocol&lt;/a&gt;, and so objects are not directly iterable using the JavaScript &lt;a href=\\&quot;/en-US/docs/Web/JavaScript/Reference/Statements/for...of\\&quot;&gt;for...of&lt;/a&gt;\\nstatement (by default).&lt;/p&gt;&lt;div class=\\&quot;notecard note\\&quot;&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;An object can implement the iteration protocol, or you can get an iterable\\nfor an object using &lt;a href=\\&quot;/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\\&quot;&gt;&lt;code&gt;Object.keys&lt;/code&gt;&lt;/a&gt; or &lt;a href=\\&quot;/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries\\&quot;&gt;&lt;code&gt;Object.entries&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;The &lt;a href=\\&quot;/en-US/docs/Web/JavaScript/Reference/Statements/for...in\\&quot;&gt;for...in&lt;/a&gt;\\nstatement allows you to iterate over the &lt;em&gt;enumerable&lt;/em&gt; properties of\\nan object.&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&quot;,type: &quot;html&quot;\nvalue: &quot;&lt;tr&gt;&lt;th scope=\\&quot;row\\&quot;&gt;Performance&lt;/th&gt;&lt;td&gt;&lt;p&gt;Performs better in scenarios involving frequent additions and removals of\\nkey-value pairs.&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;Not optimized for frequent additions and removals of key-value pairs.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&quot;,type: &quot;html&quot;\nvalue: &quot;&lt;tr&gt;&lt;th scope=\\&quot;row\\&quot;&gt;Serialization and parsing&lt;/th&gt;&lt;td&gt;&lt;p&gt;No native support for serialization or parsing.&lt;/p&gt;&lt;p&gt;(But you can build your own serialization and parsing support for &lt;code&gt;Map&lt;/code&gt; by using {{anN4cmVmKCJKU09OLnN0cmluZ2lmeSgpIik=}} with its &lt;em&gt;replacer&lt;/em&gt; argument, and by using {{anN4cmVmKCJKU09OLnBhcnNlKCkiKQ==}} with its &lt;em&gt;reviver&lt;/em&gt; argument. See the Stack Overflow question &lt;a href=\\&quot;https://stackoverflow.com/q/29085197/\\&quot;&gt;How do you JSON.stringify an ES6 Map?&lt;/a&gt;).&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;Native support for serialization from {{anN4cmVmKCJPYmplY3QiKQ==}} to JSON, using {{anN4cmVmKCJKU09OLnN0cmluZ2lmeSgpIik=}}.&lt;/p&gt;&lt;p&gt;Native support for parsing from JSON to {{anN4cmVmKCJPYmplY3QiKQ==}}, using {{anN4cmVmKCJKU09OLnBhcnNlKCkiKQ==}}.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&quot;\n\"><pre><code>type: \"html\"\nvalue: \"&lt;tr&gt;&lt;th scope=\\\"row\\\"&gt;&lt;/th&gt;&lt;th scope=\\\"col\\\"&gt;Map&lt;/th&gt;&lt;th scope=\\\"col\\\"&gt;Object&lt;/th&gt;&lt;/tr&gt;\",type: \"html\"\nvalue: \"&lt;tr&gt;&lt;th scope=\\\"row\\\"&gt;Accidental Keys&lt;/th&gt;&lt;td&gt;A &lt;code&gt;Map&lt;/code&gt; does not contain any keys by default. It only contains what\\nis explicitly put into it.&lt;/td&gt;&lt;td&gt;&lt;p&gt;An &lt;code&gt;Object&lt;/code&gt; has a prototype, so it contains default keys that could\\ncollide with your own keys if you're not careful.&lt;/p&gt;&lt;div class=\\\"notecard note\\\"&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; As of ES5, this can be bypassed by using\\n{{anN4cmVmKCJPYmplY3QuY3JlYXRlIiwgIk9iamVjdC5jcmVhdGUobnVsbCkiKQ==}}, but this is seldom done.&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;\",type: \"html\"\nvalue: \"&lt;tr&gt;&lt;th scope=\\\"row\\\"&gt;Key Types&lt;/th&gt;&lt;td&gt;A &lt;code&gt;Map&lt;/code&gt;'s keys can be any value (including functions, objects, or any\\nprimitive).&lt;/td&gt;&lt;td&gt;The keys of an &lt;code&gt;Object&lt;/code&gt; must be either a {{anN4cmVmKCJTdHJpbmciKQ==}} or a\\n{{anN4cmVmKCJTeW1ib2wiKQ==}}.&lt;/td&gt;&lt;/tr&gt;\",type: \"html\"\nvalue: \"&lt;tr&gt;&lt;th scope=\\\"row\\\"&gt;Key Order&lt;/th&gt;&lt;td&gt;&lt;p&gt;The keys in &lt;code&gt;Map&lt;/code&gt; are ordered in a simple, straightforward way: A\\n&lt;code&gt;Map&lt;/code&gt; object iterates entries, keys, and values in the order of entry\\ninsertion.&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;Although the keys of an ordinary &lt;code&gt;Object&lt;/code&gt; are ordered now, this was not always the case, and the order is complex. As a result, it's best not to rely\\non property order.&lt;/p&gt;&lt;p&gt;The order was first defined for own properties only in ECMAScript 2015;\\nECMAScript 2020 defines order for inherited properties as well. See the &lt;a href=\\\"https://tc39.es/ecma262/#sec-ordinaryownpropertykeys\\\"&gt;OrdinaryOwnPropertyKeys&lt;/a&gt;\\nand &lt;a href=\\\"https://tc39.es/ecma262/#sec-enumerate-object-properties\\\"&gt;EnumerateObjectProperties&lt;/a&gt;\\nabstract specification operations. But note that no single mechanism iterates\\n&lt;strong&gt;all&lt;/strong&gt; of an object's properties; the various mechanisms each\\ninclude different subsets of properties. ({{anN4cmVmKCJTdGF0ZW1lbnRzL2Zvci4uLmluIiwKICAgICAgICAgICJmb3ItaW4iKQ==}} includes only enumerable string-keyed properties;\\n{{anN4cmVmKCJPYmplY3Qua2V5cyIp}} includes only own, enumerable, string-keyed\\nproperties; {{anN4cmVmKCJPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyIp}} includes own, string-keyed\\nproperties even if non-enumerable; {{anN4cmVmKCJPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzIik=}}\\ndoes the same for just &lt;code&gt;Symbol&lt;/code&gt;-keyed properties, etc.)&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;\",type: \"html\"\nvalue: \"&lt;tr&gt;&lt;th scope=\\\"row\\\"&gt;&lt;p&gt;Size&lt;/p&gt;&lt;/th&gt;&lt;td&gt;The number of items in a &lt;code&gt;Map&lt;/code&gt; is easily retrieved from its\\n{{anN4cmVmKCJNYXAucHJvdG90eXBlLnNpemUiLCAic2l6ZSIp}} property.&lt;/td&gt;&lt;td&gt;The number of items in an &lt;code&gt;Object&lt;/code&gt; must be determined manually.&lt;/td&gt;&lt;/tr&gt;\",type: \"html\"\nvalue: \"&lt;tr&gt;&lt;th scope=\\\"row\\\"&gt;Iteration&lt;/th&gt;&lt;td&gt;A &lt;code&gt;Map&lt;/code&gt; is an &lt;a href=\\\"/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\\\"&gt;iterable&lt;/a&gt;, so it can be\\ndirectly iterated.&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;code&gt;Object&lt;/code&gt; does not implement an &lt;a href=\\\"/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol\\\"&gt;iteration\\nprotocol&lt;/a&gt;, and so objects are not directly iterable using the JavaScript &lt;a href=\\\"/en-US/docs/Web/JavaScript/Reference/Statements/for...of\\\"&gt;for...of&lt;/a&gt;\\nstatement (by default).&lt;/p&gt;&lt;div class=\\\"notecard note\\\"&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;An object can implement the iteration protocol, or you can get an iterable\\nfor an object using &lt;a href=\\\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\\\"&gt;&lt;code&gt;Object.keys&lt;/code&gt;&lt;/a&gt; or &lt;a href=\\\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries\\\"&gt;&lt;code&gt;Object.entries&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;The &lt;a href=\\\"/en-US/docs/Web/JavaScript/Reference/Statements/for...in\\\"&gt;for...in&lt;/a&gt;\\nstatement allows you to iterate over the &lt;em&gt;enumerable&lt;/em&gt; properties of\\nan object.&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;\",type: \"html\"\nvalue: \"&lt;tr&gt;&lt;th scope=\\\"row\\\"&gt;Performance&lt;/th&gt;&lt;td&gt;&lt;p&gt;Performs better in scenarios involving frequent additions and removals of\\nkey-value pairs.&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;Not optimized for frequent additions and removals of key-value pairs.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;\",type: \"html\"\nvalue: \"&lt;tr&gt;&lt;th scope=\\\"row\\\"&gt;Serialization and parsing&lt;/th&gt;&lt;td&gt;&lt;p&gt;No native support for serialization or parsing.&lt;/p&gt;&lt;p&gt;(But you can build your own serialization and parsing support for &lt;code&gt;Map&lt;/code&gt; by using {{anN4cmVmKCJKU09OLnN0cmluZ2lmeSgpIik=}} with its &lt;em&gt;replacer&lt;/em&gt; argument, and by using {{anN4cmVmKCJKU09OLnBhcnNlKCkiKQ==}} with its &lt;em&gt;reviver&lt;/em&gt; argument. See the Stack Overflow question &lt;a href=\\\"https://stackoverflow.com/q/29085197/\\\"&gt;How do you JSON.stringify an ES6 Map?&lt;/a&gt;).&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;Native support for serialization from {{anN4cmVmKCJPYmplY3QiKQ==}} to JSON, using {{anN4cmVmKCJKU09OLnN0cmluZ2lmeSgpIik=}}.&lt;/p&gt;&lt;p&gt;Native support for parsing from JSON to {{anN4cmVmKCJPYmplY3QiKQ==}}, using {{anN4cmVmKCJKU09OLnBhcnNlKCkiKQ==}}.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;\"\n</code></pre></div>\n<h3>Missing conversion rules</h3>\n<ul>\n<li>th[scope=\"row\"] (55:7)</li>\n<li>th[scope=\"row\"] (62:7)</li>\n<li>th[scope=\"row\"] (77:7)</li>\n<li>th[scope=\"row\"] (84:7)</li>\n<li>th[scope=\"row\"] (109:7)</li>\n<li>th[scope=\"row\"] (117:7)</li>\n<li>th[scope=\"row\"] (146:7)</li>\n<li>th[scope=\"row\"] (156:7)</li>\n</ul>\n</details>",
            "url": "https://github.com/mdn/content/pull/6194",
            "title": "HTML ➡️ Markdown: Web/JavaScript/Reference/Global_Objects/Map",
            "date_modified": "2021-06-21T14:53:57.000Z",
            "author": {
                "name": "Gregoor",
                "url": "https://github.com/Gregoor"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1466293?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>This is part of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"924868618\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mdn/content/issues/6108\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mdn/content/issues/6108/hovercard\" href=\"https://github.com/mdn/content/issues/6108\">#6108</a>.</p>\n<p>We are dealing with features that are no more on the standard track (deprecated), with bcd tables. The idea is to remove the <code>{{Specifications}}</code>, that implies missing data in this case, without putting back an outdated table like before</p>\n<p>Dealing with <code>Text.replaceWholeText()</code> here.</p>\n<p>I removed the {{Specifications}} macros and replaced it by a text. I also added a note at the top.<br>\nI removed the example (that was a link to another page), and shortened the example on that page not to use the deprecated method.</p>",
            "url": "https://github.com/mdn/content/pull/6193",
            "title": "Update no-spec msg for Text.replaceWholeText",
            "date_modified": "2021-06-21T14:20:44.000Z",
            "author": {
                "name": "teoli2003",
                "url": "https://github.com/teoli2003"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/77715283?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/>\n<blockquote>\n<p>What was wrong/why is this fix needed? (quick summary only)</p>\n</blockquote>\n<p>The docs are not accurate.</p>\n<blockquote>\n<p>Issue number (if there is an associated issue)</p>\n</blockquote>\n<blockquote>\n<p>Anything else that could help us review it</p>\n</blockquote>",
            "url": "https://github.com/mdn/content/pull/6191",
            "title": "Specify ES2015 allows function declarations in block scoping",
            "date_modified": "2021-06-21T14:00:37.000Z",
            "author": {
                "name": "alexandre-cai",
                "url": "https://github.com/alexandre-cai"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/40167249?u=c740dcc3af3619b276e0725701fda39c47131d7b&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>Please refer the below link for more information and comments:<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"908374398\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mdn/content/issues/5545\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mdn/content/issues/5545/hovercard\" href=\"https://github.com/mdn/content/issues/5545\">#5545</a></p>\n\n<blockquote>\n<p>What was wrong/why is this fix needed? (quick summary only)<br>\nDescription of TypeError for fetch was incomplete.</p>\n</blockquote>\n<blockquote>\n<p>Issue number (if there is an associated issue)<br>\n5545</p>\n</blockquote>\n<blockquote>\n<p>Anything else that could help us review it<br>\nPlease check comments on the issue. I confirmed the change before opening the PR.</p>\n</blockquote>",
            "url": "https://github.com/mdn/content/pull/6187",
            "title": "Updated the incomplete description of TypeError",
            "date_modified": "2021-06-21T12:07:10.000Z",
            "author": {
                "name": "SaurabhCha",
                "url": "https://github.com/SaurabhCha"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1466293?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>I went a bit of rabbit hole here: initially I just wanted to fix two <code>&lt;h2&gt;</code> that weren't showing because of a useless <code>&lt;div&gt;</code>. (I detected this while checking the new spec table).</p>\n<p>Finally:</p>\n<ul>\n<li>I added the missing sidebars</li>\n<li>Removed the gremlins</li>\n<li>Corrected a couple of grammar errors.</li>\n</ul>\n<p>Nothing big.</p>",
            "url": "https://github.com/mdn/content/pull/6186",
            "title": "Minor editorial and grammar fixes for Credential APIs",
            "date_modified": "2021-06-21T10:37:31.000Z",
            "author": {
                "name": "teoli2003",
                "url": "https://github.com/teoli2003"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1466293?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>This is part of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"924868618\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mdn/content/issues/6108\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mdn/content/issues/6108/hovercard\" href=\"https://github.com/mdn/content/issues/6108\">#6108</a>.</p>\n<p>We are dealing with features that are no more on the standard track (deprecated), with bcd tables. The idea is to remove the <code>{{Specifications}}</code>, that implies some data is missing on mdn/browser-spec-data, without putting back an outdated table like before.</p>\n<p>Here I deal with one WebVR property <code>Gamepad.displayId</code> that is not the most typical one as gamepads are excluded of the fundamental WebXR Display API specification, and:</p>\n<ul>\n<li>I added a note at the top;</li>\n<li>I replaced <code>{{Specification}}</code> with a more adequate text.</li>\n</ul>\n<p><strong>There are a lot more pages (~70 pages) about WebVR on MDN and I would like to do something similar (but not a cut &amp; paste: minor adaptations each time). Before proceeding with these pages, I would like a careful review of one adaptation (here!), so that I don't redo the work several times.</strong></p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/dontcallmedom/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/dontcallmedom\">@dontcallmedom</a> , I think you are quite active on immersive-web, so I'm interested in your feedback (but not only yours).</p>",
            "url": "https://github.com/mdn/content/pull/6181",
            "title": "Update no-spec msg for Gamepad.displayId",
            "date_modified": "2021-06-21T09:22:39.000Z",
            "author": {
                "name": "teoli2003",
                "url": "https://github.com/teoli2003"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/194984?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>I can find no record that the <code>MutationObserver</code> article ever actually had a “Monitoring text content changes” section, and no record that existed anywhere else in MDN at any time.</p>\n<p><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #6150.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"925532953\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mdn/content/issues/6150\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mdn/content/issues/6150/hovercard\" href=\"https://github.com/mdn/content/issues/6150\">#6150</a></p>",
            "url": "https://github.com/mdn/content/pull/6169",
            "title": "Drop link to non-existent “Monitoring text content changes” section",
            "date_modified": "2021-06-21T02:14:48.000Z",
            "author": {
                "name": "sideshowbarker",
                "url": "https://github.com/sideshowbarker"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1466293?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>Fixed some grammar, some editorial corrections, and removed some gremlins.</p>\n<p>Also fixed the sidebar (that will need a PR in mdn/yari to be fully in effect)</p>",
            "url": "https://github.com/mdn/content/pull/6166",
            "title": "Minor editorial and grammar fixes for Sensor APIs",
            "date_modified": "2021-06-20T21:29:12.000Z",
            "author": {
                "name": "teoli2003",
                "url": "https://github.com/teoli2003"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/194984?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>This updates the CSSOM·entry·in·the·Glossary to more closely match what we have at <a rel=\"nofollow\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/CSS_Object_Model\">https://developer.mozilla.org/en-US/docs/Web/API/CSS_Object_Model</a>.  Otherwise, without this change, what we have in the Glossary for CSSOM isn’t really an improvement over what we have at API/CSS_Object_Model — and also contains grammar and style problems that would otherwise need fixing.</p>\n<p><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #6146.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"925462980\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mdn/content/issues/6146\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mdn/content/issues/6146/hovercard\" href=\"https://github.com/mdn/content/issues/6146\">#6146</a></p>",
            "url": "https://github.com/mdn/content/pull/6155",
            "title": "Revise the CSSOM entry in the Glossary",
            "date_modified": "2021-06-20T10:28:47.000Z",
            "author": {
                "name": "sideshowbarker",
                "url": "https://github.com/sideshowbarker"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1984597?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/>\n<blockquote>\n<p>What was wrong/why is this fix needed? (quick summary only)</p>\n</blockquote>\n<p>I updated the library of JS libraries adding mine.</p>\n<blockquote>\n<p>Issue number (if there is an associated issue)</p>\n</blockquote>\n<p>N/A</p>\n<blockquote>\n<p>Anything else that could help us review it</p>\n</blockquote>\n<p>N/A</p>",
            "url": "https://github.com/mdn/content/pull/6152",
            "title": "add the library Custom-Element-Builder",
            "date_modified": "2021-06-20T07:53:18.000Z",
            "author": {
                "name": "tmorin",
                "url": "https://github.com/tmorin"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1466293?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p>Part of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"782791909\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mdn/content/issues/1146\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mdn/content/issues/1146/hovercard\" href=\"https://github.com/mdn/content/issues/1146\">#1146</a>: source the spec data from {{Specifications}} in API overview pages (letter c).</p>\n<p>(I fixed some gremlins at the same time)</p>",
            "url": "https://github.com/mdn/content/pull/6151",
            "title": "Replace spec table by macro in API overview pages (letter c)",
            "date_modified": "2021-06-20T07:09:22.000Z",
            "author": {
                "name": "teoli2003",
                "url": "https://github.com/teoli2003"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5395814?u=c4a0b4352bd03fb75663a0936ff61084ddab0652&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/>\n<blockquote>\n<p>What was wrong/why is this fix needed? (quick summary only)</p>\n</blockquote>\n<p>The image did not match the code.</p>\n<blockquote>\n<p>Issue number (if there is an associated issue)</p>\n</blockquote>\n<p>none</p>\n<blockquote>\n<p>Anything else that could help us review it</p>\n</blockquote>\n<p>This matches the tutorial code which uses \"LousyGames\", however the external link still displays \"ShittyGames\".</p>",
            "url": "https://github.com/mdn/content/pull/6139",
            "title": "Replaces \"ShittyGames\" with \"LousyGames\" in snake image",
            "date_modified": "2021-06-19T13:09:03.000Z",
            "author": {
                "name": "mcastorina",
                "url": "https://github.com/mcastorina"
            }
        }
    ]
}